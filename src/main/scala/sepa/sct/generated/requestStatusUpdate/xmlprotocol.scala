// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package sepa.sct.generated.requestStatusUpdate

import scala.concurrent.{ Future, ExecutionContext }


/**
usage:
val obj = scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Foo](node)
val document = scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Foo](obj, "foo", sepa.sct.generated.requestStatusUpdate.defaultScope)
**/
object `package` extends XMLProtocol { }

trait XMLProtocol extends scalaxb.XMLStandardTypes {
  val defaultScope = scalaxb.toScope(None -> "urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01",
    Some("tns") -> "urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01",
    Some("xs") -> "http://www.w3.org/2001/XMLSchema",
    Some("xsi") -> "http://www.w3.org/2001/XMLSchema-instance")
  implicit lazy val SepasctgeneratedrequestStatusUpdate_AccountIdentification4ChoicableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable] = new DefaultSepasctgeneratedrequestStatusUpdate_AccountIdentification4ChoicableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_AccountIdentification4ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_AccountIdentification4ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_AccountSchemeName1ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.AccountSchemeName1Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_AccountSchemeName1ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmountableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable] = new DefaultSepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmountableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmountFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount] = new DefaultSepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmountFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able] = new DefaultSepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5] = new DefaultSepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CashAccount24ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CashAccount24able] = new DefaultSepasctgeneratedrequestStatusUpdate_CashAccount24ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CashAccount24Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CashAccount24] = new DefaultSepasctgeneratedrequestStatusUpdate_CashAccount24Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CashAccount24_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_CashAccount24_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CategoryPurpose1ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_CategoryPurpose1ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_ClearingSystemIdentification3ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ClearingSystemIdentification3Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_ClearingSystemIdentification3ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able] = new DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2] = new DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CreditorReferenceType1ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType1Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceType1ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_CreditorReferenceType2Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2] = new DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceType2Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_DateAndPlaceOfBirthFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth] = new DefaultSepasctgeneratedrequestStatusUpdate_DateAndPlaceOfBirthFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_DocumentableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Documentable] = new DefaultSepasctgeneratedrequestStatusUpdate_DocumentableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_DocumentFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Document] = new DefaultSepasctgeneratedrequestStatusUpdate_DocumentFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_DocumentType3CodeFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.DocumentType3Code] = new DefaultSepasctgeneratedrequestStatusUpdate_DocumentType3CodeFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_Document_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_Document_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able] = new DefaultSepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8] = new DefaultSepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able] = new DefaultSepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01] = new DefaultSepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_GenericAccountIdentification1Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.GenericAccountIdentification1] = new DefaultSepasctgeneratedrequestStatusUpdate_GenericAccountIdentification1Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_GenericOrganisationIdentification1Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1] = new DefaultSepasctgeneratedrequestStatusUpdate_GenericOrganisationIdentification1Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_GenericPersonIdentification1Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1] = new DefaultSepasctgeneratedrequestStatusUpdate_GenericPersonIdentification1Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_GroupHeader53ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.GroupHeader53able] = new DefaultSepasctgeneratedrequestStatusUpdate_GroupHeader53ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_GroupHeader53Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.GroupHeader53] = new DefaultSepasctgeneratedrequestStatusUpdate_GroupHeader53Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_LocalInstrument2ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_LocalInstrument2ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OrganisationIdentification8ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8able] = new DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentification8ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OrganisationIdentification8Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8] = new DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentification8Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OrganisationIdentificationSchemeName1ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OrganisationIdentificationSchemeName1Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentificationSchemeName1ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able] = new DefaultSepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27] = new DefaultSepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able] = new DefaultSepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24] = new DefaultSepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_Party11ChoicableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Party11Choicable] = new DefaultSepasctgeneratedrequestStatusUpdate_Party11ChoicableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_Party11ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Party11Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_Party11ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_Party11Choice_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_Party11Choice_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PartyIdentification43ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able] = new DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PartyIdentification43Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PartyIdentification43] = new DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2] = new DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3] = new DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PaymentTransaction73ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able] = new DefaultSepasctgeneratedrequestStatusUpdate_PaymentTransaction73ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PaymentTransaction73Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73] = new DefaultSepasctgeneratedrequestStatusUpdate_PaymentTransaction73Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able] = new DefaultSepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25] = new DefaultSepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PersonIdentification5ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PersonIdentification5able] = new DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentification5ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PersonIdentification5Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PersonIdentification5] = new DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentification5Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PersonIdentificationSchemeName1ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PersonIdentificationSchemeName1Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentificationSchemeName1ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PostalAddress6ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PostalAddress6able] = new DefaultSepasctgeneratedrequestStatusUpdate_PostalAddress6ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PostalAddress6Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PostalAddress6] = new DefaultSepasctgeneratedrequestStatusUpdate_PostalAddress6Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_RemittanceInformation11ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able] = new DefaultSepasctgeneratedrequestStatusUpdate_RemittanceInformation11ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_RemittanceInformation11Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11] = new DefaultSepasctgeneratedrequestStatusUpdate_RemittanceInformation11Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_ServiceLevel8ChoiceFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice] = new DefaultSepasctgeneratedrequestStatusUpdate_ServiceLevel8ChoiceFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_SettlementInstruction4Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.SettlementInstruction4] = new DefaultSepasctgeneratedrequestStatusUpdate_SettlementInstruction4Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_SettlementMethod1CodeFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.SettlementMethod1Code] = new DefaultSepasctgeneratedrequestStatusUpdate_SettlementMethod1CodeFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13ableFormat: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able] = new DefaultSepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13ableFormat {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13] = new DefaultSepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13Format {}
  implicit lazy val SepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460Format: scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460] = new DefaultSepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460Format {}


  implicit val fromAnySchemaType: scala.xml.Elem => Option[scalaxb.DataRecord[Any]] = {elem =>
    import scalaxb.{Helper, DataRecord, fromXML}

    val ns = Helper.nullOrEmpty(elem.scope.getURI(elem.prefix))
    val key = Some(elem.label)
    val (xsns, xstype) = Helper.instanceType(elem)

    (key, ns) match {
      case (Some("Document"), Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460](elem)))

      case _ => None
    }

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_AccountIdentification4ChoicableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("AccountIdentification4Choice_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_AccountIdentification4ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("AccountIdentification4Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "IBAN")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Othr")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GenericAccountIdentification1](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.accountidentification4choicableoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("AccountIdentification4Choice_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "IBAN")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Othr")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GenericAccountIdentification1](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.accountidentification4choicableoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_AccountSchemeName1ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.AccountSchemeName1Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("AccountSchemeName1Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.AccountSchemeName1Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Prtry")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.AccountSchemeName1Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.AccountSchemeName1Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.accountschemename1choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmountableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("ActiveOrHistoricCurrencyAndAmount_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmountFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount] with scalaxb.CanWriteChildNodes[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    import scalaxb.ElemName._
    
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount] = seq match {
      case node: scala.xml.Node => Right(sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount(scalaxb.fromXML[BigDecimal](node, scalaxb.ElemName(node) :: stack),
        scala.collection.immutable.ListMap(List(
        (node \ "@Ccy").headOption map { x => scalaxb.DataRecord(x, node, scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)) } map { "@Ccy" -> _ }
        ).flatten[(String, scalaxb.DataRecord[Any])]: _*)))
      case _ => Left("reads failed: seq must be scala.xml.Node")
    }
    
    override def writesAttribute(__obj: sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount, __scope: scala.xml.NamespaceBinding): scala.xml.MetaData = {
      var attr: scala.xml.MetaData  = scala.xml.Null
      __obj.attributes.toList map {
        case ("@Ccy", _) => attr = scala.xml.Attribute(null, "Ccy", __obj.Ccy.toString, attr)
        case (key, x) => attr = scala.xml.Attribute((x.namespace map { __scope.getPrefix(_) }).orNull, x.key.orNull, x.value.toString, attr)
      }
      attr
    }

    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq(scala.xml.Text(__obj.value.toString))

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460] with scalaxb.CanWriteChildNodes[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    import scalaxb.ElemName._
    
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460] = seq match {
      case node: scala.xml.Node => Right(sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460(scalaxb.fromXML[BigDecimal](node, scalaxb.ElemName(node) :: stack),
        scala.collection.immutable.ListMap(List(
        (node \ "@Ccy").headOption map { x => scalaxb.DataRecord(x, node, scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)) } map { "@Ccy" -> _ }
        ).flatten[(String, scalaxb.DataRecord[Any])]: _*)))
      case _ => Left("reads failed: seq must be scala.xml.Node")
    }
    
    override def writesAttribute(__obj: sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): scala.xml.MetaData = {
      var attr: scala.xml.MetaData  = scala.xml.Null
      __obj.attributes.toList map {
        case ("@Ccy", _) => attr = scala.xml.Attribute(null, "Ccy", __obj.Ccy.toString, attr)
        case (key, x) => attr = scala.xml.Attribute((x.namespace map { __scope.getPrefix(_) }).orNull, x.key.orNull, x.value.toString, attr)
      }
      attr
    }

    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq(scala.xml.Text(__obj.value.toString))

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("BranchAndFinancialInstitutionIdentification5_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("BranchAndFinancialInstitutionIdentification5")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "FinInstnId")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able](__obj.FinInstnId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("FinInstnId"), __scope, false))
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("BranchAndFinancialInstitutionIdentification5_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "FinInstnId")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able](__obj.FinInstnId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("FinInstnId"), __scope, false))
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_CashAccount24ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CashAccount24able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.CashAccount24able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CashAccount24_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CashAccount24](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.CashAccount24able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.CashAccount24 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CashAccount24](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_CashAccount24Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.CashAccount24] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("CashAccount24")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.CashAccount24] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.CashAccount24(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.CashAccount24, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable](__obj.Id, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false))
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_CashAccount24_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("CashAccount24_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.CashAccount24_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.AccountIdentification4Choicable](__obj.Id, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false))
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_CategoryPurpose1ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("CategoryPurpose1Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Prtry")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.categorypurpose1choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_ClearingSystemIdentification3ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.ClearingSystemIdentification3Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("ClearingSystemIdentification3Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.ClearingSystemIdentification3Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Prtry")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.ClearingSystemIdentification3Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.ClearingSystemIdentification3Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.clearingsystemidentification3choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CreditorReferenceInformation2_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("CreditorReferenceInformation2")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Tp")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Ref")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Tp map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Tp"), __scope, false) } getOrElse {Nil},
        __obj.Ref map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Ref"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("CreditorReferenceInformation2_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Tp")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Ref")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Tp map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Tp"), __scope, false) } getOrElse {Nil},
        __obj.Ref map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Ref"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceType1ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType1Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("CreditorReferenceType1Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType1Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[DocumentType3Code](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.CreditorReferenceType1Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.CreditorReferenceType1Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.creditorreferencetype1choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[sepa.sct.generated.requestStatusUpdate.DocumentType3Code]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_CreditorReferenceType2Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("CreditorReferenceType2")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CdOrPrtry")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Issr")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType1Choice](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.CreditorReferenceType2, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceType1Choice](__obj.CdOrPrtry, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CdOrPrtry"), __scope, false),
        __obj.Issr map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Issr"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_DateAndPlaceOfBirthFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("DateAndPlaceOfBirth")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "BirthDt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PrvcOfBirth")) ~ 
      (scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CityOfBirth")) ~ 
      (scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CtryOfBirth")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 =>
      sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth(scalaxb.fromXML[javax.xml.datatype.XMLGregorianCalendar](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[String](p3, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[String](p4, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[javax.xml.datatype.XMLGregorianCalendar](__obj.BirthDt, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("BirthDt"), __scope, false),
        __obj.PrvcOfBirth map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PrvcOfBirth"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[String](__obj.CityOfBirth, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CityOfBirth"), __scope, false),
        scalaxb.toXML[String](__obj.CtryOfBirth, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CtryOfBirth"), __scope, false))

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_DocumentableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Documentable] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.Documentable] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Document_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Document](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.Documentable, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.Document => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Document](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_DocumentFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.Document] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("Document")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.Document] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "FIToFIPmtStsReq")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.Document(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.Document, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able](__obj.FIToFIPmtStsReq, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("FIToFIPmtStsReq"), __scope, false))
  }

  def buildSepasctgeneratedrequestStatusUpdate_DocumentType3CodeFormat = new DefaultSepasctgeneratedrequestStatusUpdate_DocumentType3CodeFormat {}
  trait DefaultSepasctgeneratedrequestStatusUpdate_DocumentType3CodeFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.DocumentType3Code] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    def fromString(value: String, scope: scala.xml.NamespaceBinding): sepa.sct.generated.requestStatusUpdate.DocumentType3Code = scalaxb.fromXML[String](scala.xml.Text(value)) match {
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("DISP")) => sepa.sct.generated.requestStatusUpdate.DISP
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("FXDR")) => sepa.sct.generated.requestStatusUpdate.FXDR
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("PUOR")) => sepa.sct.generated.requestStatusUpdate.PUOR
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("RADM")) => sepa.sct.generated.requestStatusUpdate.RADM
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("RPIN")) => sepa.sct.generated.requestStatusUpdate.RPIN
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("SCOR")) => sepa.sct.generated.requestStatusUpdate.SCOR

    }

    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.DocumentType3Code] = seq match {
      case elem: scala.xml.Elem => Right(fromString(elem.text, elem.scope))
      case _ => Right(fromString(seq.text, scala.xml.TopScope))
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.DocumentType3Code, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq =
      scala.xml.Elem(scalaxb.Helper.getPrefix(__namespace, __scope).orNull, 
        __elementLabel getOrElse { sys.error("missing element label.") },
        scala.xml.Null, __scope, true, scala.xml.Text(__obj.toString))
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_Document_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("Document_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "FIToFIPmtStsReq")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.Document_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able](__obj.FIToFIPmtStsReq, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("FIToFIPmtStsReq"), __scope, false))
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("FinancialInstitutionIdentification8_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("FinancialInstitutionIdentification8")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "BICFI")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.BICFI map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("BICFI"), __scope, false) } getOrElse {Nil})
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("FinancialInstitutionIdentification8_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "BICFI")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.BICFI map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("BICFI"), __scope, false) } getOrElse {Nil})
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("FIToFIPaymentStatusRequestV01_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("FIToFIPaymentStatusRequestV01")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "GrpHdr")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlGrpInf")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "TxInf")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53able](p1, scalaxb.ElemName(node) :: stack),
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able](_, scalaxb.ElemName(node) :: stack) },
        p3 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53able](__obj.GrpHdr, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("GrpHdr"), __scope, false),
        __obj.OrgnlGrpInf flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlGrpInf"), __scope, false) },
        __obj.TxInf flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("TxInf"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("FIToFIPaymentStatusRequestV01_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "GrpHdr")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlGrpInf")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "TxInf")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53able](p1, scalaxb.ElemName(node) :: stack),
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able](_, scalaxb.ElemName(node) :: stack) },
        p3 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.FIToFIPaymentStatusRequestV01_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53able](__obj.GrpHdr, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("GrpHdr"), __scope, false),
        __obj.OrgnlGrpInf flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlGrpInf"), __scope, false) },
        __obj.TxInf flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("TxInf"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_GenericAccountIdentification1Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.GenericAccountIdentification1] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("GenericAccountIdentification1")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.GenericAccountIdentification1] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SchmeNm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Issr")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.GenericAccountIdentification1(scalaxb.fromXML[String](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.AccountSchemeName1Choice](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.GenericAccountIdentification1, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[String](__obj.Id, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false),
        __obj.SchmeNm map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.AccountSchemeName1Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SchmeNm"), __scope, false) } getOrElse {Nil},
        __obj.Issr map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Issr"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_GenericOrganisationIdentification1Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("GenericOrganisationIdentification1")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SchmeNm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Issr")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1(scalaxb.fromXML[String](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentificationSchemeName1Choice](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[String](__obj.Id, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false),
        __obj.SchmeNm map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentificationSchemeName1Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SchmeNm"), __scope, false) } getOrElse {Nil},
        __obj.Issr map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Issr"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_GenericPersonIdentification1Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("GenericPersonIdentification1")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SchmeNm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Issr")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1(scalaxb.fromXML[String](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PersonIdentificationSchemeName1Choice](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[String](__obj.Id, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false),
        __obj.SchmeNm map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PersonIdentificationSchemeName1Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SchmeNm"), __scope, false) } getOrElse {Nil},
        __obj.Issr map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Issr"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_GroupHeader53ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.GroupHeader53able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.GroupHeader53able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("GroupHeader53_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.GroupHeader53able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.GroupHeader53 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GroupHeader53](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_GroupHeader53Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.GroupHeader53] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("GroupHeader53")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.GroupHeader53] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "MsgId")) ~ 
      (scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CreDtTm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "InstgAgt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "InstdAgt")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 =>
      sepa.sct.generated.requestStatusUpdate.GroupHeader53(scalaxb.fromXML[String](p1, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[javax.xml.datatype.XMLGregorianCalendar](p2, scalaxb.ElemName(node) :: stack),
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.GroupHeader53, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[String](__obj.MsgId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("MsgId"), __scope, false),
        scalaxb.toXML[javax.xml.datatype.XMLGregorianCalendar](__obj.CreDtTm, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CreDtTm"), __scope, false),
        __obj.InstgAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("InstgAgt"), __scope, false) } getOrElse {Nil},
        __obj.InstdAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("InstdAgt"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("GroupHeader53_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "MsgId")) ~ 
      (scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CreDtTm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "InstgAgt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "InstdAgt")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 =>
      sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460(scalaxb.fromXML[String](p1, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[javax.xml.datatype.XMLGregorianCalendar](p2, scalaxb.ElemName(node) :: stack),
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.GroupHeader53_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[String](__obj.MsgId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("MsgId"), __scope, false),
        scalaxb.toXML[javax.xml.datatype.XMLGregorianCalendar](__obj.CreDtTm, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CreDtTm"), __scope, false),
        __obj.InstgAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("InstgAgt"), __scope, false) } getOrElse {Nil},
        __obj.InstdAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("InstdAgt"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_LocalInstrument2ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("LocalInstrument2Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Prtry")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.localinstrument2choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentification8ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrganisationIdentification8_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentification8Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("OrganisationIdentification8")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "AnyBIC")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Othr")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.AnyBIC map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("AnyBIC"), __scope, false) } getOrElse {Nil},
        __obj.Othr flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Othr"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("OrganisationIdentification8_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "AnyBIC")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Othr")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.AnyBIC map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("AnyBIC"), __scope, false) } getOrElse {Nil},
        __obj.Othr flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GenericOrganisationIdentification1](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Othr"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_OrganisationIdentificationSchemeName1ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.OrganisationIdentificationSchemeName1Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("OrganisationIdentificationSchemeName1Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.OrganisationIdentificationSchemeName1Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Prtry")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.OrganisationIdentificationSchemeName1Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.OrganisationIdentificationSchemeName1Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.organisationidentificationschemename1choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OriginalGroupInformation27_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("OriginalGroupInformation27")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlMsgId")) ~ 
      (scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlMsgNmId")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27(scalaxb.fromXML[String](p1, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[String](p2, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[String](__obj.OrgnlMsgId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlMsgId"), __scope, false),
        scalaxb.toXML[String](__obj.OrgnlMsgNmId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlMsgNmId"), __scope, false))

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("OriginalGroupInformation27_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlMsgId")) ~ 
      (scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlMsgNmId")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460(scalaxb.fromXML[String](p1, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[String](p2, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.OriginalGroupInformation27_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[String](__obj.OrgnlMsgId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlMsgId"), __scope, false),
        scalaxb.toXML[String](__obj.OrgnlMsgNmId, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlMsgNmId"), __scope, false))

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OriginalTransactionReference24_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("OriginalTransactionReference24")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "IntrBkSttlmAmt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "IntrBkSttlmDt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SttlmInf")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PmtTpInf")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "RmtInf")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "UltmtDbtr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Dbtr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "DbtrAcct")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "DbtrAgt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CdtrAgt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cdtr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CdtrAcct")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "UltmtCdtr")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 =>
      sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[javax.xml.datatype.XMLGregorianCalendar](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.SettlementInstruction4](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) },
        p7.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) },
        p8.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, scalaxb.ElemName(node) :: stack) },
        p9.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) },
        p10.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) },
        p11.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) },
        p12.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, scalaxb.ElemName(node) :: stack) },
        p13.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.IntrBkSttlmAmt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("IntrBkSttlmAmt"), __scope, false) } getOrElse {Nil},
        __obj.IntrBkSttlmDt map { scalaxb.toXML[javax.xml.datatype.XMLGregorianCalendar](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("IntrBkSttlmDt"), __scope, false) } getOrElse {Nil},
        __obj.SttlmInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.SettlementInstruction4](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SttlmInf"), __scope, false) } getOrElse {Nil},
        __obj.PmtTpInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PmtTpInf"), __scope, false) } getOrElse {Nil},
        __obj.RmtInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("RmtInf"), __scope, false) } getOrElse {Nil},
        __obj.UltmtDbtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("UltmtDbtr"), __scope, false) } getOrElse {Nil},
        __obj.Dbtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Dbtr"), __scope, false) } getOrElse {Nil},
        __obj.DbtrAcct map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("DbtrAcct"), __scope, false) } getOrElse {Nil},
        __obj.DbtrAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("DbtrAgt"), __scope, false) } getOrElse {Nil},
        __obj.CdtrAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CdtrAgt"), __scope, false) } getOrElse {Nil},
        __obj.Cdtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Cdtr"), __scope, false) } getOrElse {Nil},
        __obj.CdtrAcct map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CdtrAcct"), __scope, false) } getOrElse {Nil},
        __obj.UltmtCdtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("UltmtCdtr"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("OriginalTransactionReference24_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "IntrBkSttlmAmt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "IntrBkSttlmDt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SttlmInf")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PmtTpInf")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "RmtInf")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "UltmtDbtr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Dbtr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "DbtrAcct")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "DbtrAgt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CdtrAgt")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cdtr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CdtrAcct")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "UltmtCdtr")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 =>
      sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[javax.xml.datatype.XMLGregorianCalendar](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.SettlementInstruction4](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) },
        p7.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) },
        p8.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, scalaxb.ElemName(node) :: stack) },
        p9.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) },
        p10.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, scalaxb.ElemName(node) :: stack) },
        p11.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) },
        p12.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, scalaxb.ElemName(node) :: stack) },
        p13.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.IntrBkSttlmAmt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.ActiveOrHistoricCurrencyAndAmountable](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("IntrBkSttlmAmt"), __scope, false) } getOrElse {Nil},
        __obj.IntrBkSttlmDt map { scalaxb.toXML[javax.xml.datatype.XMLGregorianCalendar](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("IntrBkSttlmDt"), __scope, false) } getOrElse {Nil},
        __obj.SttlmInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.SettlementInstruction4](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SttlmInf"), __scope, false) } getOrElse {Nil},
        __obj.PmtTpInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PmtTpInf"), __scope, false) } getOrElse {Nil},
        __obj.RmtInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("RmtInf"), __scope, false) } getOrElse {Nil},
        __obj.UltmtDbtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("UltmtDbtr"), __scope, false) } getOrElse {Nil},
        __obj.Dbtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Dbtr"), __scope, false) } getOrElse {Nil},
        __obj.DbtrAcct map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("DbtrAcct"), __scope, false) } getOrElse {Nil},
        __obj.DbtrAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("DbtrAgt"), __scope, false) } getOrElse {Nil},
        __obj.CdtrAgt map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.BranchAndFinancialInstitutionIdentification5able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CdtrAgt"), __scope, false) } getOrElse {Nil},
        __obj.Cdtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Cdtr"), __scope, false) } getOrElse {Nil},
        __obj.CdtrAcct map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CdtrAcct"), __scope, false) } getOrElse {Nil},
        __obj.UltmtCdtr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("UltmtCdtr"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_Party11ChoicableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.Party11Choicable] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.Party11Choicable] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Party11Choice_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Party11Choice](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.Party11Choicable, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.Party11Choice => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Party11Choice](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_Party11ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.Party11Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("Party11Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.Party11Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgId")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8able](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PrvtId")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PersonIdentification5able](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.Party11Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.Party11Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.party11choicableoption) map {x => scalaxb.toXML[scalaxb.DataRecord[sepa.sct.generated.requestStatusUpdate.Party11ChoicableOption]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_Party11Choice_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("Party11Choice_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgId")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OrganisationIdentification8able](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PrvtId")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PersonIdentification5able](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.Party11Choice_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.party11choicableoption) map {x => scalaxb.toXML[scalaxb.DataRecord[sepa.sct.generated.requestStatusUpdate.Party11ChoicableOption]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PartyIdentification43able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.PartyIdentification43able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PartyIdentification43_EPC115-06_SCT_IB_2019_V1.0_2")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2](node, stack))
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PartyIdentification43_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PartyIdentification43_EPC115-06_SCT_IB_2019_V1.0_3")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.PartyIdentification43able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.PartyIdentification43 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PartyIdentification43](x, __namespace, __elementLabel, __scope, false)
    }
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PartyIdentification43")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Nm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PstlAdr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.PartyIdentification43(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PartyIdentification43, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Nm map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Nm"), __scope, false) } getOrElse {Nil},
        __obj.PstlAdr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PstlAdr"), __scope, false) } getOrElse {Nil},
        __obj.Id map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PartyIdentification43_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Nm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PstlAdr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Nm map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Nm"), __scope, false) } getOrElse {Nil},
        __obj.PstlAdr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PstlAdr"), __scope, false) } getOrElse {Nil},
        __obj.Id map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PartyIdentification43_EPC115-06_SCT_IB_2019_V1.0_2")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Nm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PstlAdr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_2, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Nm map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Nm"), __scope, false) } getOrElse {Nil},
        __obj.PstlAdr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PstlAdr"), __scope, false) } getOrElse {Nil},
        __obj.Id map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PartyIdentification43_EPC115-06_SCT_IB_2019_V1.0_3")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Nm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "PstlAdr")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Id")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PartyIdentification43_EPC115u4506_SCT_IB_2019_V1u460_3, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Nm map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Nm"), __scope, false) } getOrElse {Nil},
        __obj.PstlAdr map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PstlAdr"), __scope, false) } getOrElse {Nil},
        __obj.Id map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.Party11Choicable](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Id"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PaymentTransaction73ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PaymentTransaction73_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.PaymentTransaction73able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.PaymentTransaction73 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_PaymentTransaction73Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PaymentTransaction73")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "StsReqId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlInstrId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlEndToEndId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlTxId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlTxRef")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 =>
      sepa.sct.generated.requestStatusUpdate.PaymentTransaction73(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PaymentTransaction73, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.StsReqId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("StsReqId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlInstrId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlInstrId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlEndToEndId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlEndToEndId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlTxId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlTxId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlTxRef map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlTxRef"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PaymentTransaction73_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "StsReqId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlInstrId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlEndToEndId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlTxId")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "OrgnlTxRef")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 =>
      sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PaymentTransaction73_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.StsReqId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("StsReqId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlInstrId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlInstrId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlEndToEndId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlEndToEndId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlTxId map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlTxId"), __scope, false) } getOrElse {Nil},
        __obj.OrgnlTxRef map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.OriginalTransactionReference24able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("OrgnlTxRef"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PaymentTypeInformation25_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PaymentTypeInformation25")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SvcLvl")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "LclInstrm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CtgyPurp")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.SvcLvl map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SvcLvl"), __scope, false) } getOrElse {Nil},
        __obj.LclInstrm map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("LclInstrm"), __scope, false) } getOrElse {Nil},
        __obj.CtgyPurp map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CtgyPurp"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PaymentTypeInformation25_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SvcLvl")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "LclInstrm")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CtgyPurp")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.SvcLvl map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SvcLvl"), __scope, false) } getOrElse {Nil},
        __obj.LclInstrm map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.LocalInstrument2Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("LclInstrm"), __scope, false) } getOrElse {Nil},
        __obj.CtgyPurp map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CategoryPurpose1Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CtgyPurp"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentification5ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PersonIdentification5able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.PersonIdentification5able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PersonIdentification5_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PersonIdentification5](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.PersonIdentification5able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.PersonIdentification5 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PersonIdentification5](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentification5Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PersonIdentification5] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PersonIdentification5")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PersonIdentification5] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "DtAndPlcOfBirth")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Othr")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.PersonIdentification5(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PersonIdentification5, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.DtAndPlcOfBirth map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("DtAndPlcOfBirth"), __scope, false) } getOrElse {Nil},
        __obj.Othr flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Othr"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PersonIdentification5_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "DtAndPlcOfBirth")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Othr")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.DtAndPlcOfBirth map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.DateAndPlaceOfBirth](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("DtAndPlcOfBirth"), __scope, false) } getOrElse {Nil},
        __obj.Othr flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.GenericPersonIdentification1](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Othr"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PersonIdentificationSchemeName1ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PersonIdentificationSchemeName1Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PersonIdentificationSchemeName1Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PersonIdentificationSchemeName1Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack)))) | 
      ((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Prtry")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.PersonIdentificationSchemeName1Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PersonIdentificationSchemeName1Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.personidentificationschemename1choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[Any]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PostalAddress6ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.PostalAddress6able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.PostalAddress6able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("PostalAddress6_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.PostalAddress6able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.PostalAddress6 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.PostalAddress6](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_PostalAddress6Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PostalAddress6] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PostalAddress6")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PostalAddress6] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Ctry")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "AdrLine")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.PostalAddress6(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PostalAddress6, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Ctry map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Ctry"), __scope, false) } getOrElse {Nil},
        __obj.AdrLine flatMap { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("AdrLine"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("PostalAddress6_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Ctry")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "AdrLine")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Ctry map { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Ctry"), __scope, false) } getOrElse {Nil},
        __obj.AdrLine flatMap { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("AdrLine"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_RemittanceInformation11ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("RemittanceInformation11_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.RemittanceInformation11able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.RemittanceInformation11 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_RemittanceInformation11Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("RemittanceInformation11")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11] =
      phrase(safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Ustrd")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Strd")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.RemittanceInformation11(p1 map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.RemittanceInformation11, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Ustrd flatMap { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Ustrd"), __scope, false) },
        __obj.Strd flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Strd"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("RemittanceInformation11_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Ustrd")) ~ 
      safeRep(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Strd")) ^^
      { case p1 ~ p2 =>
      sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460(p1 map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2 map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.RemittanceInformation11_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Ustrd flatMap { scalaxb.toXML[String](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Ustrd"), __scope, false) },
        __obj.Strd flatMap { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("Strd"), __scope, false) })

  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_ServiceLevel8ChoiceFormat extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("ServiceLevel8Choice")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice] =
      phrase((((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "Cd")) ^^ 
      (x => scalaxb.DataRecord(x.namespace, Some(x.name), scalaxb.fromXML[String](x, scalaxb.ElemName(node) :: stack))))) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice(p1) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.ServiceLevel8Choice, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      ((Some(__obj.servicelevel8choiceoption) map {x => scalaxb.toXML[scalaxb.DataRecord[String]](x, x.namespace, x.key, __scope, false)}).get)
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_SettlementInstruction4Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.SettlementInstruction4] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("SettlementInstruction4")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.SettlementInstruction4] =
      phrase((scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SttlmMtd")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "SttlmAcct")) ~ 
      opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "ClrSys")) ^^
      { case p1 ~ p2 ~ p3 =>
      sepa.sct.generated.requestStatusUpdate.SettlementInstruction4(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.SettlementMethod1Code](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.ClearingSystemIdentification3Choice](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.SettlementInstruction4, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.SettlementMethod1Code](__obj.SttlmMtd, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SttlmMtd"), __scope, false),
        __obj.SttlmAcct map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CashAccount24able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("SttlmAcct"), __scope, false) } getOrElse {Nil},
        __obj.ClrSys map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.ClearingSystemIdentification3Choice](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("ClrSys"), __scope, false) } getOrElse {Nil})

  }

  def buildSepasctgeneratedrequestStatusUpdate_SettlementMethod1CodeFormat = new DefaultSepasctgeneratedrequestStatusUpdate_SettlementMethod1CodeFormat {}
  trait DefaultSepasctgeneratedrequestStatusUpdate_SettlementMethod1CodeFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.SettlementMethod1Code] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    def fromString(value: String, scope: scala.xml.NamespaceBinding): sepa.sct.generated.requestStatusUpdate.SettlementMethod1Code = scalaxb.fromXML[String](scala.xml.Text(value)) match {
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("CLRG")) => sepa.sct.generated.requestStatusUpdate.CLRG
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("COVE")) => sepa.sct.generated.requestStatusUpdate.COVE
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("INDA")) => sepa.sct.generated.requestStatusUpdate.INDA
      case x: String if x == scalaxb.fromXML[String](scala.xml.Text("INGA")) => sepa.sct.generated.requestStatusUpdate.INGA

    }

    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.SettlementMethod1Code] = seq match {
      case elem: scala.xml.Elem => Right(fromString(elem.text, elem.scope))
      case _ => Right(fromString(seq.text, scala.xml.TopScope))
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.SettlementMethod1Code, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq =
      scala.xml.Elem(scalaxb.Helper.getPrefix(__namespace, __scope).orNull, 
        __elementLabel getOrElse { sys.error("missing element label.") },
        scala.xml.Null, __scope, true, scala.xml.Text(__obj.toString))
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13ableFormat extends scalaxb.XMLFormat[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able] {
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able] = seq match {
      case node: scala.xml.Node =>     
        scalaxb.Helper.instanceType(node) match {
          case (Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("StructuredRemittanceInformation13_EPC115-06_SCT_IB_2019_V1.0")) => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460](node, stack))
          case _ => Right(scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13](node, stack))
        }
      case _ => Left("reads failed: seq must be scala.xml.Node")  
    }
    
    def writes(__obj: sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13able, __namespace: Option[String], __elementLabel: Option[String],
        __scope: scala.xml.NamespaceBinding, __typeAttribute: Boolean): scala.xml.NodeSeq = __obj match {
      case x: sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460](x, __namespace, __elementLabel, __scope, true)
      case x: sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13 => scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13](x, __namespace, __elementLabel, __scope, false)
    }
  }
  trait DefaultSepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("StructuredRemittanceInformation13")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CdtrRefInf")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.CdtrRefInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CdtrRefInf"), __scope, false) } getOrElse {Nil})
  }

  trait DefaultSepasctgeneratedrequestStatusUpdate_StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460Format extends scalaxb.ElemNameParser[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460] {
    val targetNamespace: Option[String] = Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01")
    
    override def typeName: Option[String] = Some("StructuredRemittanceInformation13_EPC115-06_SCT_IB_2019_V1.0")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460] =
      phrase(opt(scalaxb.ElemName(Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), "CdtrRefInf")) ^^
      { case p1 =>
      sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460(p1.headOption map { scalaxb.fromXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: sepa.sct.generated.requestStatusUpdate.StructuredRemittanceInformation13_EPC115u4506_SCT_IB_2019_V1u460, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.CdtrRefInf map { scalaxb.toXML[sepa.sct.generated.requestStatusUpdate.CreditorReferenceInformation2able](_, Some("urn:iso:std:iso:20022:tech:xsd:pacs.028.001.01"), Some("CdtrRefInf"), __scope, false) } getOrElse {Nil})
  }


}

