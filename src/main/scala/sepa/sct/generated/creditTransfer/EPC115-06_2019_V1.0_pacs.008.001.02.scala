// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package sepa.sct.generated.creditTransfer

/** Account Identification 4ChoiceSpecifies the unique identification of an account as assigned by the account servicer.
*/
trait AccountIdentification4Choicable {
  def accountidentification4choicableoption: scalaxb.DataRecord[Any]
}


/** Account Identification 4ChoiceSpecifies the unique identification of an account as assigned by the account servicer.
*/
case class AccountIdentification4Choice(accountidentification4choicableoption: scalaxb.DataRecord[Any]) extends AccountIdentification4Choicable
      

trait AccountIdentification4ChoicableOption

case class AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460(accountidentification4choicableoption: scalaxb.DataRecord[Any]) extends AccountIdentification4Choicable
      

trait AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Account Scheme Name 1ChoiceSets of elements to identify a name of the identification scheme
*/
case class AccountSchemeName1Choice(accountschemename1choiceoption: scalaxb.DataRecord[Any])
      

trait AccountSchemeName1ChoiceOption

/** Active Currency And AmountA number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.
*/
trait ActiveCurrencyAndAmountable {
  def value: BigDecimal
  def Ccy: String
}


/** Active Currency And AmountA number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.
*/
case class ActiveCurrencyAndAmount(value: BigDecimal,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends ActiveCurrencyAndAmountable {
  lazy val Ccy = attributes("@Ccy").as[String]
}

      


case class ActiveCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460(value: BigDecimal,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends ActiveCurrencyAndAmountable {
  lazy val Ccy = attributes("@Ccy").as[String]
}

      


case class ActiveCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460_2(value: BigDecimal,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends ActiveCurrencyAndAmountable {
  lazy val Ccy = attributes("@Ccy").as[String]
}

      

sealed trait ActiveCurrencyCode_EPC115u4506_SCT_IB_2019_V1u460

object ActiveCurrencyCode_EPC115u4506_SCT_IB_2019_V1u460 {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: scalaxb.XMLFormat[sepa.sct.generated.creditTransfer.ActiveCurrencyCode_EPC115u4506_SCT_IB_2019_V1u460]): ActiveCurrencyCode_EPC115u4506_SCT_IB_2019_V1u460 = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: ActiveCurrencyCode_EPC115u4506_SCT_IB_2019_V1u460) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[ActiveCurrencyCode_EPC115u4506_SCT_IB_2019_V1u460] = Seq(EUR)
}

case object EUR extends ActiveCurrencyCode_EPC115u4506_SCT_IB_2019_V1u460 { override def toString = "EUR" }

/** Branch And Financial Institution Identification 4Set of elements used to uniquely and unambiguously identify a financial institution or a branch of a financial institution.
*/
trait BranchAndFinancialInstitutionIdentification4able {
  def FinInstnId: sepa.sct.generated.creditTransfer.FinancialInstitutionIdentification7able
}


/** Branch And Financial Institution Identification 4Set of elements used to uniquely and unambiguously identify a financial institution or a branch of a financial institution.
*/
case class BranchAndFinancialInstitutionIdentification4(FinInstnId: sepa.sct.generated.creditTransfer.FinancialInstitutionIdentification7able) extends BranchAndFinancialInstitutionIdentification4able
      


case class BranchAndFinancialInstitutionIdentification4_EPC115u4506_SCT_IB_2019_V1u460(FinInstnId: sepa.sct.generated.creditTransfer.FinancialInstitutionIdentification7able) extends BranchAndFinancialInstitutionIdentification4able
      


/** Cash Account 16Set of elements used to identify an account.
*/
trait CashAccount16able {
  def Id: sepa.sct.generated.creditTransfer.AccountIdentification4Choicable
}


/** Cash Account 16Set of elements used to identify an account.
*/
case class CashAccount16(Id: sepa.sct.generated.creditTransfer.AccountIdentification4Choicable) extends CashAccount16able
      


case class CashAccount16_EPC115u4506_SCT_IB_2019_V1u460(Id: sepa.sct.generated.creditTransfer.AccountIdentification4Choicable) extends CashAccount16able
      


/** Category Purpose 1Choice
Specifies the high level purpose of the instruction based on a set of pre-defined categories.
Usage: This is used by the initiating party to provide information concerning the processing of the payment. It is likely to trigger special processing by any of the agents involved in the payment chain.
      
*/
case class CategoryPurpose1Choice(categorypurpose1choiceoption: scalaxb.DataRecord[Any])
      

trait CategoryPurpose1ChoiceOption
sealed trait ChargeBearerType1Code

object ChargeBearerType1Code {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: scalaxb.XMLFormat[sepa.sct.generated.creditTransfer.ChargeBearerType1Code]): ChargeBearerType1Code = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: ChargeBearerType1Code) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[ChargeBearerType1Code] = Seq(SLEV)
}

case object SLEV extends ChargeBearerType1Code { override def toString = "SLEV" }

/** Clearing System Identification 3ChoiceSpecifies the clearing system identification.
*/
case class ClearingSystemIdentification3Choice(clearingsystemidentification3choiceoption: scalaxb.DataRecord[Any])
      

trait ClearingSystemIdentification3ChoiceOption

/** Creditor Reference Information 2Reference information provided by the creditor to allow the identification of the underlying documents.
*/
trait CreditorReferenceInformation2able {
  def Tp: Option[sepa.sct.generated.creditTransfer.CreditorReferenceType2able]
  def Ref: Option[String]
}


/** Creditor Reference Information 2Reference information provided by the creditor to allow the identification of the underlying documents.
*/
case class CreditorReferenceInformation2(Tp: Option[sepa.sct.generated.creditTransfer.CreditorReferenceType2able] = None,
  Ref: Option[String] = None) extends CreditorReferenceInformation2able
      


case class CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460(Tp: Option[sepa.sct.generated.creditTransfer.CreditorReferenceType2able] = None,
  Ref: Option[String] = None) extends CreditorReferenceInformation2able
      


/** Creditor Reference Type 1ChoiceSpecifies the type of document referred by the creditor.
*/
trait CreditorReferenceType1Choicable {
  def creditorreferencetype1choicableoption: scalaxb.DataRecord[sepa.sct.generated.creditTransfer.DocumentType3Code]
}


/** Creditor Reference Type 1ChoiceSpecifies the type of document referred by the creditor.
*/
case class CreditorReferenceType1Choice(creditorreferencetype1choicableoption: scalaxb.DataRecord[sepa.sct.generated.creditTransfer.DocumentType3Code]) extends CreditorReferenceType1Choicable
      

trait CreditorReferenceType1ChoicableOption

case class CreditorReferenceType1Choice_EPC115u4506_SCT_IB_2019_V1u460(creditorreferencetype1choicableoption: scalaxb.DataRecord[sepa.sct.generated.creditTransfer.DocumentType3Code]) extends CreditorReferenceType1Choicable
      

trait CreditorReferenceType1Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Creditor Reference Type 2Specifies the type of creditor reference.
*/
trait CreditorReferenceType2able {
  def CdOrPrtry: sepa.sct.generated.creditTransfer.CreditorReferenceType1Choicable
  def Issr: Option[String]
}


/** Creditor Reference Type 2Specifies the type of creditor reference.
*/
case class CreditorReferenceType2(CdOrPrtry: sepa.sct.generated.creditTransfer.CreditorReferenceType1Choicable,
  Issr: Option[String] = None) extends CreditorReferenceType2able
      


case class CreditorReferenceType2_EPC115u4506_SCT_IB_2019_V1u460(CdOrPrtry: sepa.sct.generated.creditTransfer.CreditorReferenceType1Choicable,
  Issr: Option[String] = None) extends CreditorReferenceType2able
      


/** Credit Transfer Transaction Information 11Set of elements used to provide information specific to the individual transaction(s) included in the message.
*/
trait CreditTransferTransactionInformation11able {
  def PmtId: sepa.sct.generated.creditTransfer.PaymentIdentification3able
  def PmtTpInf: Option[sepa.sct.generated.creditTransfer.PaymentTypeInformation21able]
  def IntrBkSttlmAmt: sepa.sct.generated.creditTransfer.ActiveCurrencyAndAmountable
  def ChrgBr: sepa.sct.generated.creditTransfer.ChargeBearerType1Code
  def InstgAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able]
  def InstdAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able]
  def UltmtDbtr: Option[sepa.sct.generated.creditTransfer.PartyIdentification32able]
  def Dbtr: sepa.sct.generated.creditTransfer.PartyIdentification32able
  def DbtrAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able]
  def DbtrAgt: sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able
  def CdtrAgt: sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able
  def Cdtr: sepa.sct.generated.creditTransfer.PartyIdentification32able
  def CdtrAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able]
  def UltmtCdtr: Option[sepa.sct.generated.creditTransfer.PartyIdentification32able]
  def Purp: Option[sepa.sct.generated.creditTransfer.Purpose2Choicable]
  def RmtInf: Option[sepa.sct.generated.creditTransfer.RemittanceInformation5able]
}


/** Credit Transfer Transaction Information 11Set of elements used to provide information specific to the individual transaction(s) included in the message.
*/
case class CreditTransferTransactionInformation11(PmtId: sepa.sct.generated.creditTransfer.PaymentIdentification3able,
  PmtTpInf: Option[sepa.sct.generated.creditTransfer.PaymentTypeInformation21able] = None,
  IntrBkSttlmAmt: sepa.sct.generated.creditTransfer.ActiveCurrencyAndAmountable,
  ChrgBr: sepa.sct.generated.creditTransfer.ChargeBearerType1Code,
  InstgAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None,
  InstdAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None,
  UltmtDbtr: Option[sepa.sct.generated.creditTransfer.PartyIdentification32able] = None,
  Dbtr: sepa.sct.generated.creditTransfer.PartyIdentification32able,
  DbtrAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able] = None,
  DbtrAgt: sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able,
  CdtrAgt: sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able,
  Cdtr: sepa.sct.generated.creditTransfer.PartyIdentification32able,
  CdtrAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able] = None,
  UltmtCdtr: Option[sepa.sct.generated.creditTransfer.PartyIdentification32able] = None,
  Purp: Option[sepa.sct.generated.creditTransfer.Purpose2Choicable] = None,
  RmtInf: Option[sepa.sct.generated.creditTransfer.RemittanceInformation5able] = None) extends CreditTransferTransactionInformation11able
      


case class CreditTransferTransactionInformation11_EPC115u4506_SCT_IB_2019_V1u460(PmtId: sepa.sct.generated.creditTransfer.PaymentIdentification3able,
  PmtTpInf: Option[sepa.sct.generated.creditTransfer.PaymentTypeInformation21able] = None,
  IntrBkSttlmAmt: sepa.sct.generated.creditTransfer.ActiveCurrencyAndAmountable,
  ChrgBr: sepa.sct.generated.creditTransfer.ChargeBearerType1Code,
  InstgAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None,
  InstdAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None,
  UltmtDbtr: Option[sepa.sct.generated.creditTransfer.PartyIdentification32able] = None,
  Dbtr: sepa.sct.generated.creditTransfer.PartyIdentification32able,
  DbtrAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able] = None,
  DbtrAgt: sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able,
  CdtrAgt: sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able,
  Cdtr: sepa.sct.generated.creditTransfer.PartyIdentification32able,
  CdtrAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able] = None,
  UltmtCdtr: Option[sepa.sct.generated.creditTransfer.PartyIdentification32able] = None,
  Purp: Option[sepa.sct.generated.creditTransfer.Purpose2Choicable] = None,
  RmtInf: Option[sepa.sct.generated.creditTransfer.RemittanceInformation5able] = None) extends CreditTransferTransactionInformation11able
      


/** Date And Place Of BirthDate and place of birth of a person.
*/
case class DateAndPlaceOfBirth(BirthDt: javax.xml.datatype.XMLGregorianCalendar,
  PrvcOfBirth: Option[String] = None,
  CityOfBirth: String,
  CtryOfBirth: String)
      


trait Documentable {
  def FIToFICstmrCdtTrf: sepa.sct.generated.creditTransfer.FIToFICustomerCreditTransferV02able
}


case class Document(FIToFICstmrCdtTrf: sepa.sct.generated.creditTransfer.FIToFICustomerCreditTransferV02able) extends Documentable
      

sealed trait DocumentType3Code

object DocumentType3Code {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: scalaxb.XMLFormat[sepa.sct.generated.creditTransfer.DocumentType3Code]): DocumentType3Code = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: DocumentType3Code) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[DocumentType3Code] = Seq(SCOR)
}

case object SCOR extends DocumentType3Code { override def toString = "SCOR" }

case class Document_EPC115u4506_SCT_IB_2019_V1u460(FIToFICstmrCdtTrf: sepa.sct.generated.creditTransfer.FIToFICustomerCreditTransferV02able) extends Documentable
      

sealed trait ExternalServiceLevel1Code_EPC115u4506_SCT_IB_2019_V1u460

object ExternalServiceLevel1Code_EPC115u4506_SCT_IB_2019_V1u460 {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: scalaxb.XMLFormat[sepa.sct.generated.creditTransfer.ExternalServiceLevel1Code_EPC115u4506_SCT_IB_2019_V1u460]): ExternalServiceLevel1Code_EPC115u4506_SCT_IB_2019_V1u460 = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: ExternalServiceLevel1Code_EPC115u4506_SCT_IB_2019_V1u460) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[ExternalServiceLevel1Code_EPC115u4506_SCT_IB_2019_V1u460] = Seq(SEPA)
}

case object SEPA extends ExternalServiceLevel1Code_EPC115u4506_SCT_IB_2019_V1u460 { override def toString = "SEPA" }

/** Financial Institution Identification 7Set of elements used to identify a financial institution.
*/
trait FinancialInstitutionIdentification7able {
  def BIC: Option[String]
}


/** Financial Institution Identification 7Set of elements used to identify a financial institution.
*/
case class FinancialInstitutionIdentification7(BIC: Option[String] = None) extends FinancialInstitutionIdentification7able
      


case class FinancialInstitutionIdentification7_EPC115u4506_SCT_IB_2019_V1u460(BIC: Option[String] = None) extends FinancialInstitutionIdentification7able
      


/** FITo FICustomer Credit Transfer V02The FI2FI Customer Credit Transfer message is sent by the debtor's agent to the creditor's agent, directly or through other agents and/or a payment clearing and settlement system. It is used to move funds from a debtor's account to a creditor.
*/
trait FIToFICustomerCreditTransferV02able {
  def GrpHdr: sepa.sct.generated.creditTransfer.GroupHeader33able
  def CdtTrfTxInf: Seq[sepa.sct.generated.creditTransfer.CreditTransferTransactionInformation11able]
}


/** FITo FICustomer Credit Transfer V02The FI2FI Customer Credit Transfer message is sent by the debtor's agent to the creditor's agent, directly or through other agents and/or a payment clearing and settlement system. It is used to move funds from a debtor's account to a creditor.
*/
case class FIToFICustomerCreditTransferV02(GrpHdr: sepa.sct.generated.creditTransfer.GroupHeader33able,
  CdtTrfTxInf: Seq[sepa.sct.generated.creditTransfer.CreditTransferTransactionInformation11able] = Nil) extends FIToFICustomerCreditTransferV02able
      


case class FIToFICustomerCreditTransferV02_EPC115u4506_SCT_IB_2019_V1u460(GrpHdr: sepa.sct.generated.creditTransfer.GroupHeader33able,
  CdtTrfTxInf: Seq[sepa.sct.generated.creditTransfer.CreditTransferTransactionInformation11able] = Nil) extends FIToFICustomerCreditTransferV02able
      


/** Generic Account Identification 1Information related to a generic account identification.
*/
case class GenericAccountIdentification1(Id: String,
  SchmeNm: Option[sepa.sct.generated.creditTransfer.AccountSchemeName1Choice] = None,
  Issr: Option[String] = None) extends AccountIdentification4ChoicableOption
      


/** Generic Organisation Identification 1Information related to an identification, eg, party identification or account identification.
*/
case class GenericOrganisationIdentification1(Id: String,
  SchmeNm: Option[sepa.sct.generated.creditTransfer.OrganisationIdentificationSchemeName1Choice] = None,
  Issr: Option[String] = None)
      


/** Generic Person Identification 1Information related to an identification, eg, party identification or account identification.
*/
case class GenericPersonIdentification1(Id: String,
  SchmeNm: Option[sepa.sct.generated.creditTransfer.PersonIdentificationSchemeName1Choice] = None,
  Issr: Option[String] = None)
      


/** Group Header 33Set of characteristics shared by all individual transactions included in the message.
*/
trait GroupHeader33able {
  def MsgId: String
  def CreDtTm: javax.xml.datatype.XMLGregorianCalendar
  def NbOfTxs: String
  def TtlIntrBkSttlmAmt: Option[sepa.sct.generated.creditTransfer.ActiveCurrencyAndAmountable]
  def IntrBkSttlmDt: Option[javax.xml.datatype.XMLGregorianCalendar]
  def SttlmInf: sepa.sct.generated.creditTransfer.SettlementInformation13able
  def PmtTpInf: Option[sepa.sct.generated.creditTransfer.PaymentTypeInformation21able]
  def InstgAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able]
  def InstdAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able]
}


/** Group Header 33Set of characteristics shared by all individual transactions included in the message.
*/
case class GroupHeader33(MsgId: String,
  CreDtTm: javax.xml.datatype.XMLGregorianCalendar,
  NbOfTxs: String,
  TtlIntrBkSttlmAmt: Option[sepa.sct.generated.creditTransfer.ActiveCurrencyAndAmountable] = None,
  IntrBkSttlmDt: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  SttlmInf: sepa.sct.generated.creditTransfer.SettlementInformation13able,
  PmtTpInf: Option[sepa.sct.generated.creditTransfer.PaymentTypeInformation21able] = None,
  InstgAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None,
  InstdAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None) extends GroupHeader33able
      


case class GroupHeader33_EPC115u4506_SCT_IB_2019_V1u460(MsgId: String,
  CreDtTm: javax.xml.datatype.XMLGregorianCalendar,
  NbOfTxs: String,
  TtlIntrBkSttlmAmt: Option[sepa.sct.generated.creditTransfer.ActiveCurrencyAndAmountable] = None,
  IntrBkSttlmDt: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  SttlmInf: sepa.sct.generated.creditTransfer.SettlementInformation13able,
  PmtTpInf: Option[sepa.sct.generated.creditTransfer.PaymentTypeInformation21able] = None,
  InstgAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None,
  InstdAgt: Option[sepa.sct.generated.creditTransfer.BranchAndFinancialInstitutionIdentification4able] = None) extends GroupHeader33able
      


/** Local Instrument 2ChoiceSet of elements that further identifies the type of local instruments being requested by the initiating party.
*/
trait LocalInstrument2Choicable {
  def localinstrument2choicableoption: scalaxb.DataRecord[Any]
}


/** Local Instrument 2ChoiceSet of elements that further identifies the type of local instruments being requested by the initiating party.
*/
case class LocalInstrument2Choice(localinstrument2choicableoption: scalaxb.DataRecord[Any]) extends LocalInstrument2Choicable
      

trait LocalInstrument2ChoicableOption

case class LocalInstrument2Choice_EPC115u4506_SCT_IB_2019_V1u460(localinstrument2choicableoption: scalaxb.DataRecord[Any]) extends LocalInstrument2Choicable
      

trait LocalInstrument2Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Organisation Identification 4Unique and unambiguous way to identify an organisation.
*/
trait OrganisationIdentification4able extends Party6ChoicableOption {
  def BICOrBEI: Option[String]
  def Othr: Seq[sepa.sct.generated.creditTransfer.GenericOrganisationIdentification1]
}


/** Organisation Identification 4Unique and unambiguous way to identify an organisation.
*/
case class OrganisationIdentification4(BICOrBEI: Option[String] = None,
  Othr: Seq[sepa.sct.generated.creditTransfer.GenericOrganisationIdentification1] = Nil) extends OrganisationIdentification4able
      


case class OrganisationIdentification4_EPC115u4506_SCT_IB_2019_V1u460(BICOrBEI: Option[String] = None,
  Othr: Seq[sepa.sct.generated.creditTransfer.GenericOrganisationIdentification1] = Nil) extends OrganisationIdentification4able with Party6Choice_EPC115u4506_SCT_IB_2019_V1u460Option
      


/** Organisation Identification Scheme Name 1ChoiceSets of elements to identify a name of the organisation identification scheme.
*/
case class OrganisationIdentificationSchemeName1Choice(organisationidentificationschemename1choiceoption: scalaxb.DataRecord[Any])
      

trait OrganisationIdentificationSchemeName1ChoiceOption

/** Party 6ChoiceNature or use of the account.
*/
trait Party6Choicable {
  def party6choicableoption: scalaxb.DataRecord[sepa.sct.generated.creditTransfer.Party6ChoicableOption]
}


/** Party 6ChoiceNature or use of the account.
*/
case class Party6Choice(party6choicableoption: scalaxb.DataRecord[sepa.sct.generated.creditTransfer.Party6ChoicableOption]) extends Party6Choicable
      

trait Party6ChoicableOption

case class Party6Choice_EPC115u4506_SCT_IB_2019_V1u460(party6choicableoption: scalaxb.DataRecord[sepa.sct.generated.creditTransfer.Party6ChoicableOption]) extends Party6Choicable
      

trait Party6Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Party Identification 32Set of elements used to identify a person or an organisation.
*/
trait PartyIdentification32able {
  def Nm: Option[String]
  def PstlAdr: Option[sepa.sct.generated.creditTransfer.PostalAddress6able]
  def Id: Option[sepa.sct.generated.creditTransfer.Party6Choicable]
}


/** Party Identification 32Set of elements used to identify a person or an organisation.
*/
case class PartyIdentification32(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.creditTransfer.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.creditTransfer.Party6Choicable] = None) extends PartyIdentification32able
      


case class PartyIdentification32_EPC115u4506_SCT_IB_2019_V1u460(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.creditTransfer.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.creditTransfer.Party6Choicable] = None) extends PartyIdentification32able
      


case class PartyIdentification32_EPC115u4506_SCT_IB_2019_V1u460_2(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.creditTransfer.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.creditTransfer.Party6Choicable] = None) extends PartyIdentification32able
      


case class PartyIdentification32_EPC115u4506_SCT_IB_2019_V1u460_3(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.creditTransfer.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.creditTransfer.Party6Choicable] = None) extends PartyIdentification32able
      


case class PartyIdentification32_EPC115u4506_SCT_IB_2019_V1u460_4(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.creditTransfer.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.creditTransfer.Party6Choicable] = None) extends PartyIdentification32able
      


/** Payment Identification 3Set of elements used to provide further means of referencing a payment transaction.
*/
trait PaymentIdentification3able {
  def InstrId: Option[String]
  def EndToEndId: String
  def TxId: String
}


/** Payment Identification 3Set of elements used to provide further means of referencing a payment transaction.
*/
case class PaymentIdentification3(InstrId: Option[String] = None,
  EndToEndId: String,
  TxId: String) extends PaymentIdentification3able
      


case class PaymentIdentification3_EPC115u4506_SCT_IB_2019_V1u460(InstrId: Option[String] = None,
  EndToEndId: String,
  TxId: String) extends PaymentIdentification3able
      


/** Payment Type Information 21Set of elements used to provide further details of the type of payment.
*/
trait PaymentTypeInformation21able {
  def SvcLvl: Option[sepa.sct.generated.creditTransfer.ServiceLevel8Choicable]
  def LclInstrm: Option[sepa.sct.generated.creditTransfer.LocalInstrument2Choicable]
  def CtgyPurp: Option[sepa.sct.generated.creditTransfer.CategoryPurpose1Choice]
}


/** Payment Type Information 21Set of elements used to provide further details of the type of payment.
*/
case class PaymentTypeInformation21(SvcLvl: Option[sepa.sct.generated.creditTransfer.ServiceLevel8Choicable] = None,
  LclInstrm: Option[sepa.sct.generated.creditTransfer.LocalInstrument2Choicable] = None,
  CtgyPurp: Option[sepa.sct.generated.creditTransfer.CategoryPurpose1Choice] = None) extends PaymentTypeInformation21able
      


case class PaymentTypeInformation21_EPC115u4506_SCT_IB_2019_V1u460(SvcLvl: Option[sepa.sct.generated.creditTransfer.ServiceLevel8Choicable] = None,
  LclInstrm: Option[sepa.sct.generated.creditTransfer.LocalInstrument2Choicable] = None,
  CtgyPurp: Option[sepa.sct.generated.creditTransfer.CategoryPurpose1Choice] = None) extends PaymentTypeInformation21able
      


/** Person Identification 5Unique and unambiguous way to identify a person.
*/
trait PersonIdentification5able extends Party6ChoicableOption {
  def DtAndPlcOfBirth: Option[sepa.sct.generated.creditTransfer.DateAndPlaceOfBirth]
  def Othr: Seq[sepa.sct.generated.creditTransfer.GenericPersonIdentification1]
}


/** Person Identification 5Unique and unambiguous way to identify a person.
*/
case class PersonIdentification5(DtAndPlcOfBirth: Option[sepa.sct.generated.creditTransfer.DateAndPlaceOfBirth] = None,
  Othr: Seq[sepa.sct.generated.creditTransfer.GenericPersonIdentification1] = Nil) extends PersonIdentification5able
      


case class PersonIdentification5_EPC115u4506_SCT_IB_2019_V1u460(DtAndPlcOfBirth: Option[sepa.sct.generated.creditTransfer.DateAndPlaceOfBirth] = None,
  Othr: Seq[sepa.sct.generated.creditTransfer.GenericPersonIdentification1] = Nil) extends PersonIdentification5able with Party6Choice_EPC115u4506_SCT_IB_2019_V1u460Option
      


/** Person Identification Scheme Name 1ChoiceSets of elements to identify a name of the identification scheme.
*/
case class PersonIdentificationSchemeName1Choice(personidentificationschemename1choiceoption: scalaxb.DataRecord[Any])
      

trait PersonIdentificationSchemeName1ChoiceOption

/** Postal Address 6Information that locates and identifies a specific address, as defined by postal services.
*/
trait PostalAddress6able {
  def Ctry: Option[String]
  def AdrLine: Seq[String]
}


/** Postal Address 6Information that locates and identifies a specific address, as defined by postal services.
*/
case class PostalAddress6(Ctry: Option[String] = None,
  AdrLine: Seq[String] = Nil) extends PostalAddress6able
      


case class PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460(Ctry: Option[String] = None,
  AdrLine: Seq[String] = Nil) extends PostalAddress6able
      


/** Purpose 2Choice
Specifies the underlying reason for the payment transaction.
Usage: Purpose is used by the end-customers, that is initiating party, (ultimate) debtor, (ultimate) creditor to provide information concerning the nature of the payment. Purpose is a content element, which is not used for processing by any of the agents involved in the payment chain.
      
*/
trait Purpose2Choicable {
  def purpose2choicableoption: scalaxb.DataRecord[String]
}


/** Purpose 2Choice
Specifies the underlying reason for the payment transaction.
Usage: Purpose is used by the end-customers, that is initiating party, (ultimate) debtor, (ultimate) creditor to provide information concerning the nature of the payment. Purpose is a content element, which is not used for processing by any of the agents involved in the payment chain.
      
*/
case class Purpose2Choice(purpose2choicableoption: scalaxb.DataRecord[String]) extends Purpose2Choicable
      

trait Purpose2ChoicableOption

case class Purpose2Choice_EPC115u4506_SCT_IB_2019_V1u460(purpose2choicableoption: scalaxb.DataRecord[String]) extends Purpose2Choicable
      

trait Purpose2Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Remittance Information 5Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system.
*/
trait RemittanceInformation5able {
  def Ustrd: Seq[String]
  def Strd: Seq[sepa.sct.generated.creditTransfer.StructuredRemittanceInformation7able]
}


/** Remittance Information 5Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system.
*/
case class RemittanceInformation5(Ustrd: Seq[String] = Nil,
  Strd: Seq[sepa.sct.generated.creditTransfer.StructuredRemittanceInformation7able] = Nil) extends RemittanceInformation5able
      


case class RemittanceInformation5_EPC115u4506_SCT_IB_2019_V1u460(Ustrd: Seq[String] = Nil,
  Strd: Seq[sepa.sct.generated.creditTransfer.StructuredRemittanceInformation7able] = Nil) extends RemittanceInformation5able
      


/** Service Level 8ChoiceSpecifies the service level of the transaction.
*/
trait ServiceLevel8Choicable {
  def servicelevel8choicableoption: scalaxb.DataRecord[String]
}


/** Service Level 8ChoiceSpecifies the service level of the transaction.
*/
case class ServiceLevel8Choice(servicelevel8choicableoption: scalaxb.DataRecord[String]) extends ServiceLevel8Choicable
      

trait ServiceLevel8ChoicableOption

case class ServiceLevel8Choice_EPC115u4506_SCT_IB_2019_V1u460(servicelevel8choicableoption: scalaxb.DataRecord[String]) extends ServiceLevel8Choicable
      

trait ServiceLevel8Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Settlement Information 13Set of elements used to provide information on the settlement of the instruction.
*/
trait SettlementInformation13able {
  def SttlmMtd: sepa.sct.generated.creditTransfer.SettlementMethod1Code
  def SttlmAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able]
  def ClrSys: Option[sepa.sct.generated.creditTransfer.ClearingSystemIdentification3Choice]
}


/** Settlement Information 13Set of elements used to provide information on the settlement of the instruction.
*/
case class SettlementInformation13(SttlmMtd: sepa.sct.generated.creditTransfer.SettlementMethod1Code,
  SttlmAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able] = None,
  ClrSys: Option[sepa.sct.generated.creditTransfer.ClearingSystemIdentification3Choice] = None) extends SettlementInformation13able
      


case class SettlementInformation13_EPC115u4506_SCT_IB_2019_V1u460(SttlmMtd: sepa.sct.generated.creditTransfer.SettlementMethod1Code,
  SttlmAcct: Option[sepa.sct.generated.creditTransfer.CashAccount16able] = None,
  ClrSys: Option[sepa.sct.generated.creditTransfer.ClearingSystemIdentification3Choice] = None) extends SettlementInformation13able
      

sealed trait SettlementMethod1Code

object SettlementMethod1Code {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: scalaxb.XMLFormat[sepa.sct.generated.creditTransfer.SettlementMethod1Code]): SettlementMethod1Code = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: SettlementMethod1Code) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[SettlementMethod1Code] = Seq(CLRG, INDA, INGA)
}

case object CLRG extends SettlementMethod1Code { override def toString = "CLRG" }
case object INDA extends SettlementMethod1Code { override def toString = "INDA" }
case object INGA extends SettlementMethod1Code { override def toString = "INGA" }


/** Structured Remittance Information 7Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in a structured form.
*/
trait StructuredRemittanceInformation7able {
  def CdtrRefInf: Option[sepa.sct.generated.creditTransfer.CreditorReferenceInformation2able]
}


/** Structured Remittance Information 7Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in a structured form.
*/
case class StructuredRemittanceInformation7(CdtrRefInf: Option[sepa.sct.generated.creditTransfer.CreditorReferenceInformation2able] = None) extends StructuredRemittanceInformation7able
      


case class StructuredRemittanceInformation7_EPC115u4506_SCT_IB_2019_V1u460(CdtrRefInf: Option[sepa.sct.generated.creditTransfer.CreditorReferenceInformation2able] = None) extends StructuredRemittanceInformation7able
      

