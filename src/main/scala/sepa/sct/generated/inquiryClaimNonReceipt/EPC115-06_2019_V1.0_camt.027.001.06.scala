// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package sepa.sct.generated.inquiryClaimNonReceipt

/** Account Identification 4ChoiceSpecifies the unique identification of an account as assigned by the account servicer.
*/
trait AccountIdentification4Choicable {
  def accountidentification4choicableoption: scalaxb.DataRecord[Any]
}


/** Account Identification 4ChoiceSpecifies the unique identification of an account as assigned by the account servicer.
*/
case class AccountIdentification4Choice(accountidentification4choicableoption: scalaxb.DataRecord[Any]) extends AccountIdentification4Choicable
      

trait AccountIdentification4ChoicableOption

case class AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460(accountidentification4choicableoption: scalaxb.DataRecord[Any]) extends AccountIdentification4Choicable
      

trait AccountIdentification4Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Account Scheme Name 1ChoiceSets of elements to identify a name of the identification scheme.
*/
case class AccountSchemeName1Choice(accountschemename1choiceoption: scalaxb.DataRecord[Any])
      

trait AccountSchemeName1ChoiceOption

/** Active Or Historic Currency And AmountA number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.
*/
trait ActiveOrHistoricCurrencyAndAmountable {
  def value: BigDecimal
  def Ccy: String
}


/** Active Or Historic Currency And AmountA number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.
*/
case class ActiveOrHistoricCurrencyAndAmount(value: BigDecimal,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends ActiveOrHistoricCurrencyAndAmountable {
  lazy val Ccy = attributes("@Ccy").as[String]
}

      


case class ActiveOrHistoricCurrencyAndAmount_EPC115u4506_SCT_IB_2019_V1u460(value: BigDecimal,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends ActiveOrHistoricCurrencyAndAmountable {
  lazy val Ccy = attributes("@Ccy").as[String]
}

      


/** Branch And Financial Institution Identification 5Set of elements used to uniquely and unambiguously identify a financial institution or a branch of a financial institution.
*/
trait BranchAndFinancialInstitutionIdentification5able extends Party35ChoicableOption {
  def FinInstnId: sepa.sct.generated.inquiryClaimNonReceipt.FinancialInstitutionIdentification8able
}


/** Branch And Financial Institution Identification 5Set of elements used to uniquely and unambiguously identify a financial institution or a branch of a financial institution.
*/
case class BranchAndFinancialInstitutionIdentification5(FinInstnId: sepa.sct.generated.inquiryClaimNonReceipt.FinancialInstitutionIdentification8able) extends BranchAndFinancialInstitutionIdentification5able
      


case class BranchAndFinancialInstitutionIdentification5_EPC115u4506_SCT_IB_2019_V1u460(FinInstnId: sepa.sct.generated.inquiryClaimNonReceipt.FinancialInstitutionIdentification8able) extends BranchAndFinancialInstitutionIdentification5able with Party35Choice_EPC115u4506_SCT_IB_2019_V1u460Option with Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_2Option
      


/** Case 4Provides further details to identify an investigation case.
*/
trait Case4able {
  def Id: String
  def Cretr: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable
}


/** Case 4Provides further details to identify an investigation case.
*/
case class Case4(Id: String,
  Cretr: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable) extends Case4able
      


case class Case4_EPC115u4506_SCT_IB_2019_V1u460(Id: String,
  Cretr: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable) extends Case4able
      


/** Case Assignment 4Represents the assignment of a case to a party.
*/
trait CaseAssignment4able {
  def Id: String
  def Assgnr: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable
  def Assgne: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable
  def CreDtTm: javax.xml.datatype.XMLGregorianCalendar
}


/** Case Assignment 4Represents the assignment of a case to a party.
*/
case class CaseAssignment4(Id: String,
  Assgnr: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable,
  Assgne: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable,
  CreDtTm: javax.xml.datatype.XMLGregorianCalendar) extends CaseAssignment4able
      


case class CaseAssignment4_EPC115u4506_SCT_IB_2019_V1u460(Id: String,
  Assgnr: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable,
  Assgne: sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable,
  CreDtTm: javax.xml.datatype.XMLGregorianCalendar) extends CaseAssignment4able
      


/** Cash Account 24Provides the details to identify an account.
*/
trait CashAccount24able {
  def Id: sepa.sct.generated.inquiryClaimNonReceipt.AccountIdentification4Choicable
}


/** Cash Account 24Provides the details to identify an account.
*/
case class CashAccount24(Id: sepa.sct.generated.inquiryClaimNonReceipt.AccountIdentification4Choicable) extends CashAccount24able
      


case class CashAccount24_EPC115u4506_SCT_IB_2019_V1u460(Id: sepa.sct.generated.inquiryClaimNonReceipt.AccountIdentification4Choicable) extends CashAccount24able
      


/** Category Purpose 1Choice
Specifies the high level purpose of the instruction based on a set of pre-defined categories.
Usage: This is used by the initiating party to provide information concerning the processing of the payment. It is likely to trigger special processing by any of the agents involved in the payment chain.
      
*/
case class CategoryPurpose1Choice(categorypurpose1choiceoption: scalaxb.DataRecord[Any])
      

trait CategoryPurpose1ChoiceOption

/** Claim Non Receipt V06
Scope
The Claim Non Receipt message is sent by a case creator/case assigner to a case assignee.
This message is used to initiate an investigation for missing funds at the creditor (missing credit entry to its account) or at an agent along the processing chain (missing cover for a received payment instruction).
Usage
The claim non receipt case occurs in two situations: 
- The creditor is expecting funds from a particular debtor and cannot find the corresponding credit entry on its account. In this situation, it is understood that the creditor will contact its debtor, and that the debtor will trigger the claim non receipt case on its behalf. A workflow where the creditor directly addresses a Claim Non Receipt message to its account servicing institution is not retained.
- An agent in the processing chain cannot find a cover payment corresponding to a received payment instruction. In this situation, the agent may directly trigger the investigation by sending a Claim Non Receipt message to the sender of the original payment instruction.
The Claim Non Receipt message covers one and only one payment instruction at a time. If several expected payment instructions/cover instructions are found missing, then multiple Claim Non Receipt messages must be sent.
Depending on the result of the investigation by a case assignee (incorrect routing, errors/omissions when processing the instruction or even the absence of an error) and the stage at which the payment instruction is being process, the claim non receipt case may lead to a: 
- Request To Cancel Payment message, sent to the subsequent agent in the payment processing chain, if the original payment instruction has been incorrectly routed through the chain of agents. (This also implies that a new, corrected, payment instruction is issued).
- Request To Modify Payment message, sent to the subsequent agent in the payment processing chain, if a truncation or omission has occurred during the processing of the original payment instruction.
If the above situations occur, the assignee wanting to request a payment cancellation or payment modification should first send out a Resolution Of Investigation with a confirmation status that indicates that either cancellation (CWFW) modification (MWFW) or unable to apply (UWFW) will follow. (See section on Resolution Of Investigation for more details).
In the cover is missing, the case assignee may also simply issue the omitted cover payment or when the initial cover information was incorrect, update the cover (through modification and/or cancellation as required) with the correction information provided in the ClaimNonReceipt message. The case assignee will issue a Resolution Of Investigation message with the CorrectionTransaction element mentioning the references of the cover payment.
The Claim Non Receipt message may be forwarded to subsequent case assignees.
The ClaimNonReceipt message has the following main characteristics: 
- Case Identification: 
The case creator assigns a unique case identification. This information will be passed unchanged to subsequent case assignee(s).
- Underlying Payment: 
The case creator refers to the underlying payment instruction for the unambiguous identification of the payment instruction. This identification needs to be updated by the subsequent case assigner(s) in order to match the one used with their case assignee(s).
- MissingCoverIndicator: 
The MissingCoverIndication element distinguishes between a missing cover situation (when set to YES) or a missing funds situation (when set to NO).
- CoverCorrection
The CoverCorrection element allows the case assigner to provide corrected cover information, when these are incorrect in the underlying payment instruction for which the cover is issued.
      
*/
trait ClaimNonReceiptV06able {
  def Assgnmt: sepa.sct.generated.inquiryClaimNonReceipt.CaseAssignment4able
  def Case: Option[sepa.sct.generated.inquiryClaimNonReceipt.Case4able]
  def Undrlyg: sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingTransaction4Choicable
  def InstrForAssgne: Option[sepa.sct.generated.inquiryClaimNonReceipt.InstructionForAssignee1able]
}


/** Claim Non Receipt V06
Scope
The Claim Non Receipt message is sent by a case creator/case assigner to a case assignee.
This message is used to initiate an investigation for missing funds at the creditor (missing credit entry to its account) or at an agent along the processing chain (missing cover for a received payment instruction).
Usage
The claim non receipt case occurs in two situations: 
- The creditor is expecting funds from a particular debtor and cannot find the corresponding credit entry on its account. In this situation, it is understood that the creditor will contact its debtor, and that the debtor will trigger the claim non receipt case on its behalf. A workflow where the creditor directly addresses a Claim Non Receipt message to its account servicing institution is not retained.
- An agent in the processing chain cannot find a cover payment corresponding to a received payment instruction. In this situation, the agent may directly trigger the investigation by sending a Claim Non Receipt message to the sender of the original payment instruction.
The Claim Non Receipt message covers one and only one payment instruction at a time. If several expected payment instructions/cover instructions are found missing, then multiple Claim Non Receipt messages must be sent.
Depending on the result of the investigation by a case assignee (incorrect routing, errors/omissions when processing the instruction or even the absence of an error) and the stage at which the payment instruction is being process, the claim non receipt case may lead to a: 
- Request To Cancel Payment message, sent to the subsequent agent in the payment processing chain, if the original payment instruction has been incorrectly routed through the chain of agents. (This also implies that a new, corrected, payment instruction is issued).
- Request To Modify Payment message, sent to the subsequent agent in the payment processing chain, if a truncation or omission has occurred during the processing of the original payment instruction.
If the above situations occur, the assignee wanting to request a payment cancellation or payment modification should first send out a Resolution Of Investigation with a confirmation status that indicates that either cancellation (CWFW) modification (MWFW) or unable to apply (UWFW) will follow. (See section on Resolution Of Investigation for more details).
In the cover is missing, the case assignee may also simply issue the omitted cover payment or when the initial cover information was incorrect, update the cover (through modification and/or cancellation as required) with the correction information provided in the ClaimNonReceipt message. The case assignee will issue a Resolution Of Investigation message with the CorrectionTransaction element mentioning the references of the cover payment.
The Claim Non Receipt message may be forwarded to subsequent case assignees.
The ClaimNonReceipt message has the following main characteristics: 
- Case Identification: 
The case creator assigns a unique case identification. This information will be passed unchanged to subsequent case assignee(s).
- Underlying Payment: 
The case creator refers to the underlying payment instruction for the unambiguous identification of the payment instruction. This identification needs to be updated by the subsequent case assigner(s) in order to match the one used with their case assignee(s).
- MissingCoverIndicator: 
The MissingCoverIndication element distinguishes between a missing cover situation (when set to YES) or a missing funds situation (when set to NO).
- CoverCorrection
The CoverCorrection element allows the case assigner to provide corrected cover information, when these are incorrect in the underlying payment instruction for which the cover is issued.
      
*/
case class ClaimNonReceiptV06(Assgnmt: sepa.sct.generated.inquiryClaimNonReceipt.CaseAssignment4able,
  Case: Option[sepa.sct.generated.inquiryClaimNonReceipt.Case4able] = None,
  Undrlyg: sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingTransaction4Choicable,
  InstrForAssgne: Option[sepa.sct.generated.inquiryClaimNonReceipt.InstructionForAssignee1able] = None) extends ClaimNonReceiptV06able
      


case class ClaimNonReceiptV06_EPC115u4506_SCT_IB_2019_V1u460(Assgnmt: sepa.sct.generated.inquiryClaimNonReceipt.CaseAssignment4able,
  Case: Option[sepa.sct.generated.inquiryClaimNonReceipt.Case4able] = None,
  Undrlyg: sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingTransaction4Choicable,
  InstrForAssgne: Option[sepa.sct.generated.inquiryClaimNonReceipt.InstructionForAssignee1able] = None) extends ClaimNonReceiptV06able
      


/** Clearing System Identification 3ChoiceSpecifies the clearing system identification.
*/
case class ClearingSystemIdentification3Choice(clearingsystemidentification3choiceoption: scalaxb.DataRecord[Any])
      

trait ClearingSystemIdentification3ChoiceOption

/** Creditor Reference Information 2Reference information provided by the creditor to allow the identification of the underlying documents.
*/
trait CreditorReferenceInformation2able {
  def Tp: Option[sepa.sct.generated.inquiryClaimNonReceipt.CreditorReferenceType2]
  def Ref: Option[String]
}


/** Creditor Reference Information 2Reference information provided by the creditor to allow the identification of the underlying documents.
*/
case class CreditorReferenceInformation2(Tp: Option[sepa.sct.generated.inquiryClaimNonReceipt.CreditorReferenceType2] = None,
  Ref: Option[String] = None) extends CreditorReferenceInformation2able
      


case class CreditorReferenceInformation2_EPC115u4506_SCT_IB_2019_V1u460(Tp: Option[sepa.sct.generated.inquiryClaimNonReceipt.CreditorReferenceType2] = None,
  Ref: Option[String] = None) extends CreditorReferenceInformation2able
      


/** Creditor Reference Type 1ChoiceSpecifies the type of document referred by the creditor.
*/
case class CreditorReferenceType1Choice(creditorreferencetype1choiceoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.DocumentType3Code])
      

trait CreditorReferenceType1ChoiceOption

/** Creditor Reference Type 2Specifies the type of creditor reference.
*/
case class CreditorReferenceType2(CdOrPrtry: sepa.sct.generated.inquiryClaimNonReceipt.CreditorReferenceType1Choice,
  Issr: Option[String] = None)
      


/** Date And Place Of Birth 1Date and place of birth of a person.
*/
case class DateAndPlaceOfBirth1(BirthDt: javax.xml.datatype.XMLGregorianCalendar,
  PrvcOfBirth: Option[String] = None,
  CityOfBirth: String,
  CtryOfBirth: String)
      


trait Documentable {
  def ClmNonRct: sepa.sct.generated.inquiryClaimNonReceipt.ClaimNonReceiptV06able
}


case class Document(ClmNonRct: sepa.sct.generated.inquiryClaimNonReceipt.ClaimNonReceiptV06able) extends Documentable
      

sealed trait DocumentType3Code

object DocumentType3Code {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: scalaxb.XMLFormat[sepa.sct.generated.inquiryClaimNonReceipt.DocumentType3Code]): DocumentType3Code = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: DocumentType3Code) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[DocumentType3Code] = Seq(DISP, FXDR, PUOR, RADM, RPIN, SCOR)
}

case object DISP extends DocumentType3Code { override def toString = "DISP" }
case object FXDR extends DocumentType3Code { override def toString = "FXDR" }
case object PUOR extends DocumentType3Code { override def toString = "PUOR" }
case object RADM extends DocumentType3Code { override def toString = "RADM" }
case object RPIN extends DocumentType3Code { override def toString = "RPIN" }
case object SCOR extends DocumentType3Code { override def toString = "SCOR" }


case class Document_EPC115u4506_SCT_IB_2019_V1u460(ClmNonRct: sepa.sct.generated.inquiryClaimNonReceipt.ClaimNonReceiptV06able) extends Documentable
      


/** Financial Institution Identification 8Set of elements used to identify a financial institution.
*/
trait FinancialInstitutionIdentification8able {
  def BICFI: Option[String]
}


/** Financial Institution Identification 8Set of elements used to identify a financial institution.
*/
case class FinancialInstitutionIdentification8(BICFI: Option[String] = None) extends FinancialInstitutionIdentification8able
      


case class FinancialInstitutionIdentification8_EPC115u4506_SCT_IB_2019_V1u460(BICFI: Option[String] = None) extends FinancialInstitutionIdentification8able
      


/** Generic Account Identification 1Information related to a generic account identification.
*/
case class GenericAccountIdentification1(Id: String,
  SchmeNm: Option[sepa.sct.generated.inquiryClaimNonReceipt.AccountSchemeName1Choice] = None,
  Issr: Option[String] = None) extends AccountIdentification4ChoicableOption
      


/** Generic Organisation Identification 1Information related to an identification of an organisation.
*/
case class GenericOrganisationIdentification1(Id: String,
  SchmeNm: Option[sepa.sct.generated.inquiryClaimNonReceipt.OrganisationIdentificationSchemeName1Choice] = None,
  Issr: Option[String] = None)
      


/** Generic Person Identification 1Information related to an identification of a person.
*/
case class GenericPersonIdentification1(Id: String,
  SchmeNm: Option[sepa.sct.generated.inquiryClaimNonReceipt.PersonIdentificationSchemeName1Choice] = None,
  Issr: Option[String] = None)
      


/** Instruction For Assignee 1Further information related to the processing of the investigation that may need to be acted upon by the assignee.
*/
trait InstructionForAssignee1able {
  def Cd: Option[String]
  def InstrInf: Option[String]
}


/** Instruction For Assignee 1Further information related to the processing of the investigation that may need to be acted upon by the assignee.
*/
case class InstructionForAssignee1(Cd: Option[String] = None,
  InstrInf: Option[String] = None) extends InstructionForAssignee1able
      


case class InstructionForAssignee1_EPC115u4506_SCT_IB_2019_V1u460(Cd: Option[String] = None,
  InstrInf: Option[String] = None) extends InstructionForAssignee1able
      


/** Local Instrument 2ChoiceSet of elements that further identifies the type of local instruments being requested by the initiating party.
*/
case class LocalInstrument2Choice(localinstrument2choiceoption: scalaxb.DataRecord[Any])
      

trait LocalInstrument2ChoiceOption

/** Organisation Identification 8Unique and unambiguous way to identify an organisation.
*/
trait OrganisationIdentification8able extends Party34ChoicableOption {
  def AnyBIC: Option[String]
  def Othr: Seq[sepa.sct.generated.inquiryClaimNonReceipt.GenericOrganisationIdentification1]
}


/** Organisation Identification 8Unique and unambiguous way to identify an organisation.
*/
case class OrganisationIdentification8(AnyBIC: Option[String] = None,
  Othr: Seq[sepa.sct.generated.inquiryClaimNonReceipt.GenericOrganisationIdentification1] = Nil) extends OrganisationIdentification8able
      


case class OrganisationIdentification8_EPC115u4506_SCT_IB_2019_V1u460(AnyBIC: Option[String] = None,
  Othr: Seq[sepa.sct.generated.inquiryClaimNonReceipt.GenericOrganisationIdentification1] = Nil) extends OrganisationIdentification8able with Party34Choice_EPC115u4506_SCT_IB_2019_V1u460Option
      


/** Organisation Identification Scheme Name 1ChoiceSets of elements to identify a name of the organisation identification scheme.
*/
case class OrganisationIdentificationSchemeName1Choice(organisationidentificationschemename1choiceoption: scalaxb.DataRecord[Any])
      

trait OrganisationIdentificationSchemeName1ChoiceOption

/** Original Transaction Reference 27Key elements used to refer the original transaction.
*/
trait OriginalTransactionReference27able {
  def SttlmInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.SettlementInstruction4]
  def PmtTpInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.PaymentTypeInformation25able]
  def RmtInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.RemittanceInformation15able]
  def UltmtDbtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable]
  def Dbtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable]
  def DbtrAcct: Option[sepa.sct.generated.inquiryClaimNonReceipt.CashAccount24able]
  def DbtrAgt: Option[sepa.sct.generated.inquiryClaimNonReceipt.BranchAndFinancialInstitutionIdentification5able]
  def CdtrAgt: Option[sepa.sct.generated.inquiryClaimNonReceipt.BranchAndFinancialInstitutionIdentification5able]
  def Cdtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable]
  def CdtrAcct: Option[sepa.sct.generated.inquiryClaimNonReceipt.CashAccount24able]
  def UltmtCdtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable]
  def Purp: Option[sepa.sct.generated.inquiryClaimNonReceipt.Purpose2Choice]
}


/** Original Transaction Reference 27Key elements used to refer the original transaction.
*/
case class OriginalTransactionReference27(SttlmInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.SettlementInstruction4] = None,
  PmtTpInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.PaymentTypeInformation25able] = None,
  RmtInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.RemittanceInformation15able] = None,
  UltmtDbtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  Dbtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  DbtrAcct: Option[sepa.sct.generated.inquiryClaimNonReceipt.CashAccount24able] = None,
  DbtrAgt: Option[sepa.sct.generated.inquiryClaimNonReceipt.BranchAndFinancialInstitutionIdentification5able] = None,
  CdtrAgt: Option[sepa.sct.generated.inquiryClaimNonReceipt.BranchAndFinancialInstitutionIdentification5able] = None,
  Cdtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  CdtrAcct: Option[sepa.sct.generated.inquiryClaimNonReceipt.CashAccount24able] = None,
  UltmtCdtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  Purp: Option[sepa.sct.generated.inquiryClaimNonReceipt.Purpose2Choice] = None) extends OriginalTransactionReference27able
      


case class OriginalTransactionReference27_EPC115u4506_SCT_IB_2019_V1u460(SttlmInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.SettlementInstruction4] = None,
  PmtTpInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.PaymentTypeInformation25able] = None,
  RmtInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.RemittanceInformation15able] = None,
  UltmtDbtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  Dbtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  DbtrAcct: Option[sepa.sct.generated.inquiryClaimNonReceipt.CashAccount24able] = None,
  DbtrAgt: Option[sepa.sct.generated.inquiryClaimNonReceipt.BranchAndFinancialInstitutionIdentification5able] = None,
  CdtrAgt: Option[sepa.sct.generated.inquiryClaimNonReceipt.BranchAndFinancialInstitutionIdentification5able] = None,
  Cdtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  CdtrAcct: Option[sepa.sct.generated.inquiryClaimNonReceipt.CashAccount24able] = None,
  UltmtCdtr: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party35Choicable] = None,
  Purp: Option[sepa.sct.generated.inquiryClaimNonReceipt.Purpose2Choice] = None) extends OriginalTransactionReference27able
      


/** Party 34ChoiceNature or use of the account.
*/
trait Party34Choicable {
  def party34choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party34ChoicableOption]
}


/** Party 34ChoiceNature or use of the account.
*/
case class Party34Choice(party34choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party34ChoicableOption]) extends Party34Choicable
      

trait Party34ChoicableOption

case class Party34Choice_EPC115u4506_SCT_IB_2019_V1u460(party34choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party34ChoicableOption]) extends Party34Choicable
      

trait Party34Choice_EPC115u4506_SCT_IB_2019_V1u460Option

/** Party 35ChoiceIdentification of a person, an organisation or a financial institution.
*/
trait Party35Choicable {
  def party35choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party35ChoicableOption]
}


/** Party 35ChoiceIdentification of a person, an organisation or a financial institution.
*/
case class Party35Choice(party35choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party35ChoicableOption]) extends Party35Choicable
      

trait Party35ChoicableOption

case class Party35Choice_EPC115u4506_SCT_IB_2019_V1u460(party35choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party35ChoicableOption]) extends Party35Choicable
      

trait Party35Choice_EPC115u4506_SCT_IB_2019_V1u460Option

case class Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_2(party35choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party35ChoicableOption]) extends Party35Choicable
      

trait Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_2Option

case class Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_3(party35choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party35ChoicableOption]) extends Party35Choicable
      

trait Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_3Option

case class Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_4(party35choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.Party35ChoicableOption]) extends Party35Choicable
      

trait Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_4Option

/** Party Identification 125Set of elements used to identify a person or an organisation.
*/
trait PartyIdentification125able extends Party35ChoicableOption {
  def Nm: Option[String]
  def PstlAdr: Option[sepa.sct.generated.inquiryClaimNonReceipt.PostalAddress6able]
  def Id: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party34Choicable]
}


/** Party Identification 125Set of elements used to identify a person or an organisation.
*/
case class PartyIdentification125(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.inquiryClaimNonReceipt.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party34Choicable] = None) extends PartyIdentification125able
      


case class PartyIdentification125_EPC115u4506_SCT_IB_2019_V1u460(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.inquiryClaimNonReceipt.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party34Choicable] = None) extends PartyIdentification125able with Party35Choice_EPC115u4506_SCT_IB_2019_V1u460Option
      


case class PartyIdentification125_EPC115u4506_SCT_IB_2019_V1u460_2(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.inquiryClaimNonReceipt.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party34Choicable] = None) extends PartyIdentification125able with Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_3Option
      


case class PartyIdentification125_EPC115u4506_SCT_IB_2019_V1u460_3(Nm: Option[String] = None,
  PstlAdr: Option[sepa.sct.generated.inquiryClaimNonReceipt.PostalAddress6able] = None,
  Id: Option[sepa.sct.generated.inquiryClaimNonReceipt.Party34Choicable] = None) extends PartyIdentification125able with Party35Choice_EPC115u4506_SCT_IB_2019_V1u460_4Option
      


/** Payment Type Information 25Set of elements used to provide further details of the type of payment.
*/
trait PaymentTypeInformation25able {
  def SvcLvl: Option[sepa.sct.generated.inquiryClaimNonReceipt.ServiceLevel8Choice]
  def LclInstrm: Option[sepa.sct.generated.inquiryClaimNonReceipt.LocalInstrument2Choice]
  def CtgyPurp: Option[sepa.sct.generated.inquiryClaimNonReceipt.CategoryPurpose1Choice]
}


/** Payment Type Information 25Set of elements used to provide further details of the type of payment.
*/
case class PaymentTypeInformation25(SvcLvl: Option[sepa.sct.generated.inquiryClaimNonReceipt.ServiceLevel8Choice] = None,
  LclInstrm: Option[sepa.sct.generated.inquiryClaimNonReceipt.LocalInstrument2Choice] = None,
  CtgyPurp: Option[sepa.sct.generated.inquiryClaimNonReceipt.CategoryPurpose1Choice] = None) extends PaymentTypeInformation25able
      


case class PaymentTypeInformation25_EPC115u4506_SCT_IB_2019_V1u460(SvcLvl: Option[sepa.sct.generated.inquiryClaimNonReceipt.ServiceLevel8Choice] = None,
  LclInstrm: Option[sepa.sct.generated.inquiryClaimNonReceipt.LocalInstrument2Choice] = None,
  CtgyPurp: Option[sepa.sct.generated.inquiryClaimNonReceipt.CategoryPurpose1Choice] = None) extends PaymentTypeInformation25able
      


/** Person Identification 13Unique and unambiguous way to identify a person.
*/
trait PersonIdentification13able extends Party34ChoicableOption {
  def DtAndPlcOfBirth: Option[sepa.sct.generated.inquiryClaimNonReceipt.DateAndPlaceOfBirth1]
  def Othr: Seq[sepa.sct.generated.inquiryClaimNonReceipt.GenericPersonIdentification1]
}


/** Person Identification 13Unique and unambiguous way to identify a person.
*/
case class PersonIdentification13(DtAndPlcOfBirth: Option[sepa.sct.generated.inquiryClaimNonReceipt.DateAndPlaceOfBirth1] = None,
  Othr: Seq[sepa.sct.generated.inquiryClaimNonReceipt.GenericPersonIdentification1] = Nil) extends PersonIdentification13able
      


case class PersonIdentification13_EPC115u4506_SCT_IB_2019_V1u460(DtAndPlcOfBirth: Option[sepa.sct.generated.inquiryClaimNonReceipt.DateAndPlaceOfBirth1] = None,
  Othr: Seq[sepa.sct.generated.inquiryClaimNonReceipt.GenericPersonIdentification1] = Nil) extends PersonIdentification13able with Party34Choice_EPC115u4506_SCT_IB_2019_V1u460Option
      


/** Person Identification Scheme Name 1ChoiceSets of elements to identify a name of the identification scheme.
*/
case class PersonIdentificationSchemeName1Choice(personidentificationschemename1choiceoption: scalaxb.DataRecord[Any])
      

trait PersonIdentificationSchemeName1ChoiceOption

/** Postal Address 6Information that locates and identifies a specific address, as defined by postal services.
*/
trait PostalAddress6able {
  def Ctry: Option[String]
  def AdrLine: Seq[String]
}


/** Postal Address 6Information that locates and identifies a specific address, as defined by postal services.
*/
case class PostalAddress6(Ctry: Option[String] = None,
  AdrLine: Seq[String] = Nil) extends PostalAddress6able
      


case class PostalAddress6_EPC115u4506_SCT_IB_2019_V1u460(Ctry: Option[String] = None,
  AdrLine: Seq[String] = Nil) extends PostalAddress6able
      


/** Purpose 2Choice
Specifies the underlying reason for the payment transaction.
Usage: Purpose is used by the end-customers, that is initiating party, (ultimate) debtor, (ultimate) creditor to provide information concerning the nature of the payment. Purpose is a content element, which is not used for processing by any of the agents involved in the payment chain.
      
*/
case class Purpose2Choice(purpose2choiceoption: scalaxb.DataRecord[String])
      

trait Purpose2ChoiceOption

/** Remittance Information 15Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system.
*/
trait RemittanceInformation15able {
  def Ustrd: Seq[String]
  def Strd: Seq[sepa.sct.generated.inquiryClaimNonReceipt.StructuredRemittanceInformation15able]
}


/** Remittance Information 15Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system.
*/
case class RemittanceInformation15(Ustrd: Seq[String] = Nil,
  Strd: Seq[sepa.sct.generated.inquiryClaimNonReceipt.StructuredRemittanceInformation15able] = Nil) extends RemittanceInformation15able
      


case class RemittanceInformation15_EPC115u4506_SCT_IB_2019_V1u460(Ustrd: Seq[String] = Nil,
  Strd: Seq[sepa.sct.generated.inquiryClaimNonReceipt.StructuredRemittanceInformation15able] = Nil) extends RemittanceInformation15able
      


/** Service Level 8ChoiceSpecifies the service level of the transaction.
*/
case class ServiceLevel8Choice(servicelevel8choiceoption: scalaxb.DataRecord[String])
      

trait ServiceLevel8ChoiceOption

/** Settlement Instruction 4Provides further details on the settlement of the instruction.
*/
case class SettlementInstruction4(SttlmMtd: sepa.sct.generated.inquiryClaimNonReceipt.SettlementMethod1Code,
  SttlmAcct: Option[sepa.sct.generated.inquiryClaimNonReceipt.CashAccount24able] = None,
  ClrSys: Option[sepa.sct.generated.inquiryClaimNonReceipt.ClearingSystemIdentification3Choice] = None)
      

sealed trait SettlementMethod1Code

object SettlementMethod1Code {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: scalaxb.XMLFormat[sepa.sct.generated.inquiryClaimNonReceipt.SettlementMethod1Code]): SettlementMethod1Code = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: SettlementMethod1Code) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[SettlementMethod1Code] = Seq(CLRG, COVE, INDA, INGA)
}

case object CLRG extends SettlementMethod1Code { override def toString = "CLRG" }
case object COVE extends SettlementMethod1Code { override def toString = "COVE" }
case object INDA extends SettlementMethod1Code { override def toString = "INDA" }
case object INGA extends SettlementMethod1Code { override def toString = "INGA" }


/** Structured Remittance Information 15Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in a structured form.
*/
trait StructuredRemittanceInformation15able {
  def CdtrRefInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.CreditorReferenceInformation2able]
}


/** Structured Remittance Information 15Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in a structured form.
*/
case class StructuredRemittanceInformation15(CdtrRefInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.CreditorReferenceInformation2able] = None) extends StructuredRemittanceInformation15able
      


case class StructuredRemittanceInformation15_EPC115u4506_SCT_IB_2019_V1u460(CdtrRefInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.CreditorReferenceInformation2able] = None) extends StructuredRemittanceInformation15able
      


/** Underlying Group Information 1Unique identification, as assigned by the first instructing agent, to unambiguously identify the group of transactions.
*/
trait UnderlyingGroupInformation1able {
  def OrgnlMsgId: String
  def OrgnlMsgNmId: String
}


/** Underlying Group Information 1Unique identification, as assigned by the first instructing agent, to unambiguously identify the group of transactions.
*/
case class UnderlyingGroupInformation1(OrgnlMsgId: String,
  OrgnlMsgNmId: String) extends UnderlyingGroupInformation1able
      


case class UnderlyingGroupInformation1_EPC115u4506_SCT_IB_2019_V1u460(OrgnlMsgId: String,
  OrgnlMsgNmId: String) extends UnderlyingGroupInformation1able
      


/** Underlying Payment Transaction 3Reference information concerning the original transaction, to which the investigation message refers.
*/
trait UnderlyingPaymentTransaction3able extends UnderlyingTransaction4ChoicableOption {
  def OrgnlGrpInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingGroupInformation1able]
  def OrgnlInstrId: Option[String]
  def OrgnlEndToEndId: Option[String]
  def OrgnlTxId: Option[String]
  def OrgnlIntrBkSttlmAmt: sepa.sct.generated.inquiryClaimNonReceipt.ActiveOrHistoricCurrencyAndAmountable
  def OrgnlIntrBkSttlmDt: javax.xml.datatype.XMLGregorianCalendar
  def OrgnlTxRef: Option[sepa.sct.generated.inquiryClaimNonReceipt.OriginalTransactionReference27able]
}


/** Underlying Payment Transaction 3Reference information concerning the original transaction, to which the investigation message refers.
*/
case class UnderlyingPaymentTransaction3(OrgnlGrpInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingGroupInformation1able] = None,
  OrgnlInstrId: Option[String] = None,
  OrgnlEndToEndId: Option[String] = None,
  OrgnlTxId: Option[String] = None,
  OrgnlIntrBkSttlmAmt: sepa.sct.generated.inquiryClaimNonReceipt.ActiveOrHistoricCurrencyAndAmountable,
  OrgnlIntrBkSttlmDt: javax.xml.datatype.XMLGregorianCalendar,
  OrgnlTxRef: Option[sepa.sct.generated.inquiryClaimNonReceipt.OriginalTransactionReference27able] = None) extends UnderlyingPaymentTransaction3able
      


case class UnderlyingPaymentTransaction3_EPC115u4506_SCT_IB_2019_V1u460(OrgnlGrpInf: Option[sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingGroupInformation1able] = None,
  OrgnlInstrId: Option[String] = None,
  OrgnlEndToEndId: Option[String] = None,
  OrgnlTxId: Option[String] = None,
  OrgnlIntrBkSttlmAmt: sepa.sct.generated.inquiryClaimNonReceipt.ActiveOrHistoricCurrencyAndAmountable,
  OrgnlIntrBkSttlmDt: javax.xml.datatype.XMLGregorianCalendar,
  OrgnlTxRef: Option[sepa.sct.generated.inquiryClaimNonReceipt.OriginalTransactionReference27able] = None) extends UnderlyingPaymentTransaction3able with UnderlyingTransaction4Choice_EPC115u4506_SCT_IB_2019_V1u460Option
      


/** Underlying Transaction 4ChoiceSpecifies the details of the underlying transaction on which the investigation is processed.
*/
trait UnderlyingTransaction4Choicable {
  def underlyingtransaction4choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingPaymentTransaction3able]
}


/** Underlying Transaction 4ChoiceSpecifies the details of the underlying transaction on which the investigation is processed.
*/
case class UnderlyingTransaction4Choice(underlyingtransaction4choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingPaymentTransaction3able]) extends UnderlyingTransaction4Choicable
      

trait UnderlyingTransaction4ChoicableOption

case class UnderlyingTransaction4Choice_EPC115u4506_SCT_IB_2019_V1u460(underlyingtransaction4choicableoption: scalaxb.DataRecord[sepa.sct.generated.inquiryClaimNonReceipt.UnderlyingPaymentTransaction3able]) extends UnderlyingTransaction4Choicable
      

trait UnderlyingTransaction4Choice_EPC115u4506_SCT_IB_2019_V1u460Option
