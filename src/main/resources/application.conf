databaseConfig = {
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  properties = {
    databaseName = "open_core_banking_project"
    user = "postgres"
    password = "password"
  }
  numThreads = 10
}

akka {
  loglevel = "INFO"
  actor {
    provider = "cluster"
    allow-java-serialization = "off"
    kryo {
      type = "graph"
      idstrategy = "default"
      buffer-size = 65536
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = true
      post-serialization-transformations = "off"
      #post-serialization-transformations = "lz4,aes"
      #encryption {
      #  aes {
      #      mode = "AES/CBC/PKCS5Padding"
      #      key = j68KkRjq21ykRGAQ
      #      IV-length = 16
      #  }
      #}
      implicit-registration-logging = false
      kryo-trace = false
      resolve-subclasses = true
    }
    serializers {
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }
    serialization-bindings {
      "net.liftweb.common.Full" = kryo,
      "net.liftweb.common.Empty" = kryo,
      "net.liftweb.common.Box" = kryo,
      "net.liftweb.common.ParamFailure" = kryo,
      "com.openbankproject.commons.model.BankAccount" = kryo,
      "com.openbankproject.commons.model.View" = kryo,
      "com.openbankproject.commons.model.User" = kryo,
      "com.openbankproject.commons.model.ViewId" = kryo,
      "com.openbankproject.commons.model.ViewIdBankIdAccountId" = kryo,
      "com.openbankproject.commons.model.Permission" = kryo,
      "scala.Unit" = kryo,
      "scala.Boolean" = kryo,
      "java.io.Serializable" = kryo,
      "scala.collection.immutable.List" = kryo,
      "akka.actor.ActorSelectionMessage" = kryo,
    }
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2662
      send-buffer-size = 50000000
      receive-buffer-size = 50000000
      maximum-frame-size = 52428800
    }
  }
}